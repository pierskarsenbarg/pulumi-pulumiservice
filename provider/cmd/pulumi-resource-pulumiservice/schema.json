{
  "name": "pulumiservice",
  "displayName": "Pulumi Cloud",
  "description": "A native Pulumi package for creating and managing Pulumi Cloud constructs",
  "keywords": [
    "pulumi",
    "kind/native",
    "category/infrastructure"
  ],
  "homepage": "https://pulumi.com",
  "license": "Apache-2.0",
  "repository": "https://github.com/pulumi/pulumi-pulumiservice",
  "publisher": "Pulumi",
  "meta": {
    "moduleFormat": "(.*)"
  },
  "language": {
    "csharp": {
      "namespaces": {
        "pulumiservice": "PulumiService"
      },
      "packageReferences": {
        "Pulumi": "3.*"
      }
    },
    "go": {
      "generateResourceContainerTypes": true,
      "importBasePath": "github.com/pulumi/pulumi-pulumiservice/sdk/go/pulumiservice"
    },
    "nodejs": {
      "dependencies": {
        "@pulumi/pulumi": "^3.0.0"
      },
      "packageName": "@pulumi/pulumiservice"
    },
    "python": {
      "packageName": "pulumi_pulumiservice",
      "requires": {
        "pulumi": ">=3.0.0,<4.0.0"
      }
    }
  },
  "config": {
    "variables": {
      "accessToken": {
        "type": "string",
        "secret": true
      }
    }
  },
  "types": {
    "pulumiservice:index:AWSOIDCConfiguration": {
      "properties": {
        "duration": {
          "type": "string",
          "description": "Duration of the assume-role session in “XhYmZs” format"
        },
        "policyARNs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional set of IAM policy ARNs that further restrict the assume-role session"
        },
        "roleARN": {
          "type": "string",
          "description": "The ARN of the role to assume using the OIDC token."
        },
        "sessionName": {
          "type": "string",
          "description": "The name of the assume-role session."
        }
      },
      "type": "object",
      "required": [
        "roleARN",
        "sessionName"
      ]
    },
    "pulumiservice:index:AzureOIDCConfiguration": {
      "properties": {
        "clientId": {
          "type": "string",
          "description": "The client ID of the federated workload identity."
        },
        "subscriptionId": {
          "type": "string",
          "description": "The subscription ID of the federated workload identity."
        },
        "tenantId": {
          "type": "string",
          "description": "The tenant ID of the federated workload identity."
        }
      },
      "type": "object",
      "required": [
        "clientId",
        "subscriptionId",
        "tenantId"
      ]
    },
    "pulumiservice:index:DeploymentSettingsExecutorContext": {
      "description": "The executor context defines information about the executor where the deployment is executed. If unspecified, the default 'pulumi/pulumi' image is used.",
      "properties": {
        "executorImage": {
          "type": "string",
          "description": "Allows overriding the default executor image with a custom image. E.g. 'pulumi/pulumi-nodejs:latest'"
        }
      },
      "type": "object",
      "required": [
        "executorImage"
      ]
    },
    "pulumiservice:index:DeploymentSettingsGitAuthBasicAuth": {
      "description": "Git source settings for a deployment.",
      "properties": {
        "password": {
          "type": "string",
          "description": "Password for git basic authentication.",
          "secret": true
        },
        "username": {
          "type": "string",
          "description": "User name for git basic authentication.",
          "secret": true
        }
      },
      "type": "object",
      "required": [
        "password",
        "username"
      ]
    },
    "pulumiservice:index:DeploymentSettingsGitAuthSSHAuth": {
      "description": "Git source settings for a deployment.",
      "properties": {
        "password": {
          "type": "string",
          "description": "Optional password for SSH authentication.",
          "secret": true
        },
        "sshPrivateKey": {
          "type": "string",
          "description": "SSH private key.",
          "secret": true
        }
      },
      "type": "object",
      "required": [
        "sshPrivateKey"
      ]
    },
    "pulumiservice:index:DeploymentSettingsGitSource": {
      "description": "Git source settings for a deployment.",
      "properties": {
        "branch": {
          "type": "string",
          "description": "The branch to deploy. One of either `branch` or `commit` must be specified."
        },
        "commit": {
          "type": "string",
          "description": "The commit to deploy. One of either `branch` or `commit` must be specified."
        },
        "gitAuth": {
          "$ref": "#/types/pulumiservice:index:DeploymentSettingsGitSourceGitAuth",
          "description": "Git authentication configuration for this deployment. Should not be specified if there are `gitHub` settings for this deployment."
        },
        "repoDir": {
          "type": "string",
          "description": "The directory within the repository where the Pulumi.yaml is located."
        },
        "repoUrl": {
          "type": "string",
          "description": "The repository URL to use for git settings. Should not be specified if there are `gitHub` settings for this deployment."
        }
      },
      "type": "object"
    },
    "pulumiservice:index:DeploymentSettingsGitSourceGitAuth": {
      "description": "Git source settings for a deployment.",
      "properties": {
        "basicAuth": {
          "$ref": "#/types/pulumiservice:index:DeploymentSettingsGitAuthBasicAuth",
          "description": "Basic auth for git authentication. Only one of `personalAccessToken`, `sshAuth`, or `basicAuth` must be defined."
        },
        "sshAuth": {
          "$ref": "#/types/pulumiservice:index:DeploymentSettingsGitAuthSSHAuth",
          "description": "SSH auth for git authentication. Only one of `personalAccessToken`, `sshAuth`, or `basicAuth` must be defined."
        }
      },
      "type": "object"
    },
    "pulumiservice:index:DeploymentSettingsGithub": {
      "description": "GitHub settings for the deployment.",
      "properties": {
        "deployCommits": {
          "type": "boolean",
          "description": "Trigger a deployment running `pulumi up` on commit.",
          "default": true
        },
        "paths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The paths within the repo that deployments should be filtered to."
        },
        "previewPullRequests": {
          "type": "boolean",
          "description": "Trigger a deployment running `pulumi preview` when a PR is opened.",
          "default": true
        },
        "pullRequestTemplate": {
          "type": "boolean",
          "description": "Use this stack as a template for pull request review stacks.",
          "default": false
        },
        "repository": {
          "type": "string",
          "description": "The GitHub repository in the format org/repo."
        }
      },
      "type": "object"
    },
    "pulumiservice:index:DeploymentSettingsOperationContext": {
      "description": "Settings related to the Pulumi operation environment during the deployment.",
      "properties": {
        "environmentVariables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Environment variables to set for the deployment."
        },
        "oidc": {
          "$ref": "#/types/pulumiservice:index:OperationContextOIDC",
          "description": "OIDC configuration to use during the deployment."
        },
        "options": {
          "$ref": "#/types/pulumiservice:index:OperationContextOptions",
          "description": "Options to override default behavior during the deployment."
        },
        "preRunCommands": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Shell commands to run before the Pulumi operation executes."
        }
      },
      "type": "object"
    },
    "pulumiservice:index:DeploymentSettingsSourceContext": {
      "description": "Settings related to the source of the deployment.",
      "properties": {
        "git": {
          "$ref": "#/types/pulumiservice:index:DeploymentSettingsGitSource",
          "description": "Git source settings for a deployment."
        }
      },
      "type": "object"
    },
    "pulumiservice:index:GCPOIDCConfiguration": {
      "properties": {
        "projectId": {
          "type": "string",
          "description": "The numerical ID of the GCP project."
        },
        "providerId": {
          "type": "string",
          "description": "The ID of the identity provider associated with the workload pool."
        },
        "region": {
          "type": "string",
          "description": "The region of the GCP project."
        },
        "serviceAccount": {
          "type": "string",
          "description": "The email address of the service account to use."
        },
        "tokenLifetime": {
          "type": "string",
          "description": "The lifetime of the temporary credentials in “XhYmZs” format."
        },
        "workloadPoolId": {
          "type": "string",
          "description": "The ID of the workload pool to use."
        }
      },
      "type": "object",
      "required": [
        "projectId",
        "providerId",
        "serviceAccount",
        "workloadPoolId"
      ]
    },
    "pulumiservice:index:OperationContextOIDC": {
      "properties": {
        "aws": {
          "$ref": "#/types/pulumiservice:index:AWSOIDCConfiguration",
          "description": "AWS-specific OIDC configuration."
        },
        "azure": {
          "$ref": "#/types/pulumiservice:index:AzureOIDCConfiguration",
          "description": "Azure-specific OIDC configuration."
        },
        "gcp": {
          "$ref": "#/types/pulumiservice:index:GCPOIDCConfiguration",
          "description": "GCP-specific OIDC configuration."
        }
      },
      "type": "object"
    },
    "pulumiservice:index:OperationContextOptions": {
      "properties": {
        "deleteAfterDestroy": {
          "type": "boolean",
          "description": "Whether the stack should be deleted after it is destroyed."
        },
        "shell": {
          "type": "string",
          "description": "The shell to use to run commands during the deployment. Defaults to 'bash'."
        },
        "skipInstallDependencies": {
          "type": "boolean",
          "description": "Skip the default dependency installation step - use this to customize the dependency installation (e.g. if using yarn or poetry)"
        },
        "skipIntermediateDeployments": {
          "type": "boolean",
          "description": "Skip intermediate deployments (Consolidate multiple deployments of the same type into one deployment)"
        }
      },
      "type": "object"
    },
    "pulumiservice:index:PulumiOperation": {
      "type": "string",
      "enum": [
        {
          "description": "Analogous to `pulumi up` command.",
          "value": "update"
        },
        {
          "description": "Analogous to `pulumi preview` command.",
          "value": "preview"
        },
        {
          "description": "Analogous to `pulumi refresh` command.",
          "value": "refresh"
        },
        {
          "description": "Analogous to `pulumi destroy` command.",
          "value": "destroy"
        }
      ]
    },
    "pulumiservice:index:TeamStackPermissionScope": {
      "type": "number",
      "enum": [
        {
          "name": "read",
          "description": "Grants read permissions to stack.",
          "value": 101
        },
        {
          "name": "edit",
          "description": "Grants edit permissions to stack.",
          "value": 102
        },
        {
          "name": "admin",
          "description": "Grants admin permissions to stack.",
          "value": 103
        }
      ]
    },
    "pulumiservice:index:WebhookFilters": {
      "type": "string",
      "enum": [
        {
          "name": "StackCreated",
          "description": "Trigger a webhook when a stack is created. Only valid for org webhooks.",
          "value": "stack_created"
        },
        {
          "name": "StackDeleted",
          "description": "Trigger a webhook when a stack is deleted. Only valid for org webhooks.",
          "value": "stack_deleted"
        },
        {
          "name": "UpdateSucceeded",
          "description": "Trigger a webhook when a stack update succeeds.",
          "value": "update_succeeded"
        },
        {
          "name": "UpdateFailed",
          "description": "Trigger a webhook when a stack update fails.",
          "value": "update_failed"
        },
        {
          "name": "PreviewSucceeded",
          "description": "Trigger a webhook when a stack preview succeeds.",
          "value": "preview_succeeded"
        },
        {
          "name": "PreviewFailed",
          "description": "Trigger a webhook when a stack preview fails.",
          "value": "preview_failed"
        },
        {
          "name": "DestroySucceeded",
          "description": "Trigger a webhook when a stack destroy succeeds.",
          "value": "destroy_succeeded"
        },
        {
          "name": "DestroyFailed",
          "description": "Trigger a webhook when a stack destroy fails.",
          "value": "destroy_failed"
        },
        {
          "name": "RefreshSucceeded",
          "description": "Trigger a webhook when a stack refresh succeeds.",
          "value": "refresh_succeeded"
        },
        {
          "name": "RefreshFailed",
          "description": "Trigger a webhook when a stack refresh fails.",
          "value": "refresh_failed"
        },
        {
          "name": "DeploymentQueued",
          "description": "Trigger a webhook when a deployment is queued.",
          "value": "deployment_queued"
        },
        {
          "name": "DeploymentStarted",
          "description": "Trigger a webhook when a deployment starts running.",
          "value": "deployment_started"
        },
        {
          "name": "DeploymentSucceeded",
          "description": "Trigger a webhook when a deployment succeeds.",
          "value": "deployment_succeeded"
        },
        {
          "name": "DeploymentFailed",
          "description": "Trigger a webhook when a deployment fails.",
          "value": "deployment_failed"
        },
        {
          "name": "DriftDetected",
          "description": "Trigger a webhook when drift is detected.",
          "value": "drift_detected"
        },
        {
          "name": "DriftDetectionSucceeded",
          "description": "Trigger a webhook when a drift detection run succeeds, regardless of whether drift is detected.",
          "value": "drift_detection_succeeded"
        },
        {
          "name": "DriftDetectionFailed",
          "description": "Trigger a webhook when a drift detection run fails.",
          "value": "drift_detection_failed"
        },
        {
          "name": "DriftRemediationSucceeded",
          "description": "Trigger a webhook when a drift remediation run succeeds.",
          "value": "drift_remediation_succeeded"
        },
        {
          "name": "DriftRemediationFailed",
          "description": "Trigger a webhook when a drift remediation run fails.",
          "value": "drift_remediation_failed"
        }
      ]
    },
    "pulumiservice:index:WebhookFormat": {
      "type": "string",
      "enum": [
        {
          "description": "The default webhook format.",
          "value": "raw"
        },
        {
          "description": "Messages formatted for consumption by Slack incoming webhooks.",
          "value": "slack"
        },
        {
          "name": "PulumiDeployments",
          "description": "Initiate deployments on a stack from a Pulumi Cloud webhook.",
          "value": "pulumi_deployments"
        },
        {
          "name": "MicrosoftTeams",
          "description": "Messages formatted for consumption by Microsoft Teams incoming webhooks.",
          "value": "ms_teams"
        }
      ]
    }
  },
  "provider": {
    "type": "object",
    "inputProperties": {
      "accessToken": {
        "type": "string",
        "description": "Access Token to authenticate with Pulumi Cloud.",
        "default": "",
        "defaultInfo": {
          "environment": [
            "PULUMI_ACCESS_TOKEN"
          ]
        }
      }
    }
  },
  "resources": {
    "pulumiservice:index:AccessToken": {
      "description": "Access tokens allow a user to authenticate against the Pulumi Cloud",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of the access token."
        },
        "tokenId": {
          "type": "string",
          "description": "The token identifier."
        },
        "value": {
          "type": "string",
          "description": "The token's value.",
          "secret": true
        }
      },
      "type": "object",
      "required": [
        "description",
        "tokenId",
        "value"
      ],
      "inputProperties": {
        "description": {
          "type": "string",
          "description": "Description of the access token."
        }
      },
      "requiredInputs": [
        "description"
      ]
    },
    "pulumiservice:index:AgentPool": {
      "description": "Agent Pool for customer manager deployments",
      "properties": {
        "agentPoolId": {
          "type": "string",
          "description": "The agent pool identifier."
        },
        "description": {
          "type": "string",
          "description": "Description of the agent pool."
        },
        "name": {
          "type": "string",
          "description": "The name of the agent pool."
        },
        "organizationName": {
          "type": "string",
          "description": "The organization's name."
        },
        "tokenValue": {
          "type": "string",
          "description": "The agent pool's token's value.",
          "secret": true
        }
      },
      "type": "object",
      "required": [
        "agentPoolId",
        "name",
        "organizationName",
        "tokenValue"
      ],
      "inputProperties": {
        "description": {
          "type": "string",
          "description": "Description of the agent pool."
        },
        "name": {
          "type": "string",
          "description": "Name of the agent pool."
        },
        "organizationName": {
          "type": "string",
          "description": "The organization's name."
        }
      },
      "requiredInputs": [
        "name",
        "organizationName"
      ]
    },
    "pulumiservice:index:DeploymentSchedule": {
      "description": "A scheduled recurring or single time run of a pulumi command.",
      "properties": {
        "organization": {
          "type": "string",
          "description": "Organization name."
        },
        "project": {
          "type": "string",
          "description": "Project name."
        },
        "pulumiOperation": {
          "$ref": "#/types/pulumiservice:index:PulumiOperation",
          "description": "Which operation to run."
        },
        "scheduleCron": {
          "type": "string",
          "description": "Cron expression for recurring scheduled runs. If you are suppling this, do not supply timestamp."
        },
        "scheduleId": {
          "type": "string",
          "description": "Schedule ID of the created schedule, assigned by Pulumi Cloud."
        },
        "stack": {
          "type": "string",
          "description": "Stack name."
        },
        "timestamp": {
          "type": "string",
          "description": "The time at which the schedule should run, in ISO 8601 format. Eg: 2020-01-01T00:00:00Z. If you are suppling this, do not supply scheduleCron."
        }
      },
      "type": "object",
      "required": [
        "organization",
        "project",
        "pulumiOperation",
        "scheduleId",
        "stack"
      ],
      "inputProperties": {
        "organization": {
          "type": "string",
          "description": "Organization name."
        },
        "project": {
          "type": "string",
          "description": "Project name."
        },
        "pulumiOperation": {
          "$ref": "#/types/pulumiservice:index:PulumiOperation",
          "description": "Which command to run."
        },
        "scheduleCron": {
          "type": "string",
          "description": "Cron expression for recurring scheduled runs. If you are suppling this, do not supply timestamp."
        },
        "stack": {
          "type": "string",
          "description": "Stack name."
        },
        "timestamp": {
          "type": "string",
          "description": "The time at which the schedule should run, in ISO 8601 format. Eg: 2020-01-01T00:00:00Z. If you are suppling this, do not supply scheduleCron."
        }
      },
      "requiredInputs": [
        "organization",
        "project",
        "pulumiOperation",
        "stack"
      ]
    },
    "pulumiservice:index:DeploymentSettings": {
      "description": "Deployment settings configure Pulumi Deployments for a stack.\n\n### Import\n\nDeployment settings can be imported using the `id`, which for deployment settings is `{org}/{project}/{stack}` e.g.,\n\n```sh\n $ pulumi import pulumiservice:index:DeploymentSettings my_settings my-org/my-project/my-stack\n```\n\n",
      "properties": {
        "organization": {
          "type": "string",
          "description": "Organization name."
        },
        "project": {
          "type": "string",
          "description": "Project name."
        },
        "stack": {
          "type": "string",
          "description": "Stack name."
        }
      },
      "type": "object",
      "required": [
        "organization",
        "project",
        "stack"
      ],
      "inputProperties": {
        "agentPoolId": {
          "type": "string",
          "description": "The agent pool identifier to use for the deployment."
        },
        "executorContext": {
          "$ref": "#/types/pulumiservice:index:DeploymentSettingsExecutorContext",
          "description": "Settings related to the deployment executor."
        },
        "github": {
          "$ref": "#/types/pulumiservice:index:DeploymentSettingsGithub",
          "description": "GitHub settings for the deployment."
        },
        "operationContext": {
          "$ref": "#/types/pulumiservice:index:DeploymentSettingsOperationContext",
          "description": "Settings related to the Pulumi operation environment during the deployment."
        },
        "organization": {
          "type": "string",
          "description": "Organization name."
        },
        "project": {
          "type": "string",
          "description": "Project name."
        },
        "sourceContext": {
          "$ref": "#/types/pulumiservice:index:DeploymentSettingsSourceContext",
          "description": "Settings related to the source of the deployment."
        },
        "stack": {
          "type": "string",
          "description": "Stack name."
        }
      },
      "requiredInputs": [
        "organization",
        "project",
        "sourceContext",
        "stack"
      ]
    },
    "pulumiservice:index:DriftSchedule": {
      "description": "A cron schedule to run drift detection.",
      "properties": {
        "autoRemediate": {
          "type": "boolean",
          "description": "Whether any drift detected should be remediated after a drift run."
        },
        "organization": {
          "type": "string",
          "description": "Organization name."
        },
        "project": {
          "type": "string",
          "description": "Project name."
        },
        "scheduleCron": {
          "type": "string",
          "description": "Cron expression for when to run drift detection."
        },
        "scheduleId": {
          "type": "string",
          "description": "Schedule ID of the created schedule, assigned by Pulumi Cloud."
        },
        "stack": {
          "type": "string",
          "description": "Stack name."
        }
      },
      "type": "object",
      "required": [
        "organization",
        "project",
        "scheduleCron",
        "scheduleId",
        "stack"
      ],
      "inputProperties": {
        "autoRemediate": {
          "type": "boolean",
          "description": "Whether any drift detected should be remediated after a drift run."
        },
        "organization": {
          "type": "string",
          "description": "Organization name."
        },
        "project": {
          "type": "string",
          "description": "Project name."
        },
        "scheduleCron": {
          "type": "string",
          "description": "Cron expression for when to run drift detection."
        },
        "stack": {
          "type": "string",
          "description": "Stack name."
        }
      },
      "requiredInputs": [
        "organization",
        "project",
        "scheduleCron",
        "stack"
      ]
    },
    "pulumiservice:index:OrgAccessToken": {
      "description": "The Pulumi Cloud allows users to create access tokens scoped to orgs. Org access tokens is a resource to create them and assign them to an org",
      "properties": {
        "admin": {
          "type": "boolean",
          "description": "Optional. True if this is an admin token."
        },
        "description": {
          "type": "string",
          "description": "Optional. Description for the token."
        },
        "name": {
          "type": "string",
          "description": "The name for the token."
        },
        "organizationName": {
          "type": "string",
          "description": "The organization's name."
        },
        "value": {
          "type": "string",
          "description": "The token's value.",
          "secret": true
        }
      },
      "type": "object",
      "required": [
        "name",
        "organizationName",
        "value"
      ],
      "inputProperties": {
        "admin": {
          "type": "boolean",
          "description": "Optional. True if this is an admin token."
        },
        "description": {
          "type": "string",
          "description": "Optional. Team description."
        },
        "name": {
          "type": "string",
          "description": "The name for the token."
        },
        "organizationName": {
          "type": "string",
          "description": "The organization's name."
        }
      },
      "requiredInputs": [
        "name",
        "organizationName"
      ]
    },
    "pulumiservice:index:StackTag": {
      "description": "Stacks have associated metadata in the form of tags. Each tag consists of a name and value.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the tag. The 'key' part of the key=value pair"
        },
        "organization": {
          "type": "string",
          "description": "Organization name."
        },
        "project": {
          "type": "string",
          "description": "Project name."
        },
        "stack": {
          "type": "string",
          "description": "Stack name."
        },
        "value": {
          "type": "string",
          "description": "Value of the tag. The 'value' part of the key=value pair"
        }
      },
      "type": "object",
      "required": [
        "name",
        "organization",
        "project",
        "stack",
        "value"
      ],
      "inputProperties": {
        "name": {
          "type": "string",
          "description": "Name of the tag. The 'key' part of the key=value pair"
        },
        "organization": {
          "type": "string",
          "description": "Organization name."
        },
        "project": {
          "type": "string",
          "description": "Project name."
        },
        "stack": {
          "type": "string",
          "description": "Stack name."
        },
        "value": {
          "type": "string",
          "description": "Value of the tag. The 'value' part of the key=value pair"
        }
      },
      "requiredInputs": [
        "name",
        "organization",
        "project",
        "stack",
        "value"
      ]
    },
    "pulumiservice:index:Team": {
      "description": "The Pulumi Cloud offers role-based access control (RBAC) using teams. Teams allow organization admins to assign a set of stack permissions to a group of users.",
      "properties": {
        "description": {
          "type": "string",
          "description": "Optional. Team description."
        },
        "displayName": {
          "type": "string",
          "description": "Optional. Team display name."
        },
        "githubTeamId": {
          "type": "number",
          "description": "The GitHub ID of the team to mirror. Must be in the same GitHub organization that the Pulumi org is backed by. Required for \"github\" teams."
        },
        "members": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of team members."
        },
        "name": {
          "type": "string",
          "description": "The team's name. Required for \"pulumi\" teams."
        },
        "organizationName": {
          "type": "string",
          "description": "The name of the Pulumi organization the team belongs to."
        },
        "teamType": {
          "type": "string",
          "description": "The type of team. Must be either `pulumi` or `github`."
        }
      },
      "type": "object",
      "required": [
        "members",
        "organizationName",
        "teamType"
      ],
      "inputProperties": {
        "description": {
          "type": "string",
          "description": "Optional. Team description."
        },
        "displayName": {
          "type": "string",
          "description": "Optional. Team display name."
        },
        "githubTeamId": {
          "type": "number",
          "description": "The GitHub ID of the team to mirror. Must be in the same GitHub organization that the Pulumi org is backed by. Required for \"github\" teams."
        },
        "members": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of team members."
        },
        "name": {
          "type": "string",
          "description": "The team's name. Required for \"pulumi\" teams."
        },
        "organizationName": {
          "type": "string",
          "description": "The name of the Pulumi organization the team belongs to."
        },
        "teamType": {
          "type": "string",
          "description": "The type of team. Must be either `pulumi` or `github`."
        }
      },
      "requiredInputs": [
        "organizationName",
        "teamType"
      ]
    },
    "pulumiservice:index:TeamAccessToken": {
      "description": "The Pulumi Cloud allows users to create access tokens scoped to team. Team access tokens is a resource to create them and assign them to a team",
      "properties": {
        "description": {
          "type": "string",
          "description": "Optional. Description for the token."
        },
        "name": {
          "type": "string",
          "description": "The name for the token. This must be unique amongst all machine tokens within your organization."
        },
        "organizationName": {
          "type": "string",
          "description": "The organization's name."
        },
        "teamName": {
          "type": "string",
          "description": "The team name."
        },
        "value": {
          "type": "string",
          "description": "The token's value.",
          "secret": true
        }
      },
      "type": "object",
      "required": [
        "name",
        "organizationName",
        "teamName",
        "value"
      ],
      "inputProperties": {
        "description": {
          "type": "string",
          "description": "Optional. Team description."
        },
        "name": {
          "type": "string",
          "description": "The name for the token. This must be unique amongst all machine tokens within your organization."
        },
        "organizationName": {
          "type": "string",
          "description": "The organization's name."
        },
        "teamName": {
          "type": "string",
          "description": "The team name."
        }
      },
      "requiredInputs": [
        "name",
        "organizationName",
        "teamName"
      ]
    },
    "pulumiservice:index:TeamStackPermission": {
      "description": "Grants a team permissions to the specified stack.",
      "type": "object",
      "inputProperties": {
        "organization": {
          "type": "string",
          "description": "The organization or the personal account name of the stack."
        },
        "permission": {
          "$ref": "#/types/pulumiservice:index:TeamStackPermissionScope",
          "plain": true,
          "description": "Sets the permission level that this team will be granted to the stack."
        },
        "project": {
          "type": "string",
          "description": "The project name for this stack."
        },
        "stack": {
          "type": "string",
          "description": "The name of the stack that the team will be granted permissions to."
        },
        "team": {
          "type": "string",
          "description": "The name of the team to grant this stack permissions to. This is not the display name."
        }
      },
      "requiredInputs": [
        "organization",
        "permission",
        "project",
        "stack",
        "team"
      ]
    },
    "pulumiservice:index:TtlSchedule": {
      "description": "A scheduled stack destory run.",
      "properties": {
        "deleteAfterDestroy": {
          "type": "boolean",
          "description": "True if the stack and all associated history and settings should be deleted."
        },
        "organization": {
          "type": "string",
          "description": "Organization name."
        },
        "project": {
          "type": "string",
          "description": "Project name."
        },
        "scheduleId": {
          "type": "string",
          "description": "Schedule ID of the created schedule, assigned by Pulumi Cloud."
        },
        "stack": {
          "type": "string",
          "description": "Stack name."
        },
        "timestamp": {
          "type": "string",
          "description": "The time at which the schedule should run, in ISO 8601 format. Eg: 2020-01-01T00:00:00Z."
        }
      },
      "type": "object",
      "required": [
        "organization",
        "project",
        "scheduleId",
        "stack",
        "timestamp"
      ],
      "inputProperties": {
        "deleteAfterDestroy": {
          "type": "boolean",
          "description": "True if the stack and all associated history and settings should be deleted."
        },
        "organization": {
          "type": "string",
          "description": "Organization name."
        },
        "project": {
          "type": "string",
          "description": "Project name."
        },
        "stack": {
          "type": "string",
          "description": "Stack name."
        },
        "timestamp": {
          "type": "string",
          "description": "The time at which the schedule should run, in ISO 8601 format. Eg: 2020-01-01T00:00:00Z."
        }
      },
      "requiredInputs": [
        "organization",
        "project",
        "stack",
        "timestamp"
      ]
    },
    "pulumiservice:index:Webhook": {
      "description": "Pulumi Webhooks allow you to notify external services of events happening within your Pulumi organization or stack. For example, you can trigger a notification whenever a stack is updated. Whenever an event occurs, Pulumi will send an HTTP POST request to all registered webhooks. The webhook can then be used to emit some notification, start running integration tests, or even update additional stacks.\n\n### Import\n\nPulumi webhooks can be imported using the `id`, which for webhooks is `{org}/{project}/{stack}/{webhook-name}` e.g.,\n\n```sh\n $ pulumi import pulumiservice:index:Webhook my_webhook my-org/my-project/my-stack/4b0d0671\n```\n\n",
      "properties": {
        "active": {
          "type": "boolean",
          "description": "Indicates whether this webhook is enabled or not."
        },
        "displayName": {
          "type": "string",
          "description": "The friendly name displayed in the Pulumi Cloud."
        },
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/types/pulumiservice:index:WebhookFilters"
          },
          "description": "Optional set of filters to apply to the webhook. See [webhook docs](https://www.pulumi.com/docs/intro/pulumi-service/webhooks/#filters) for more information."
        },
        "format": {
          "$ref": "#/types/pulumiservice:index:WebhookFormat",
          "description": "Format of the webhook payload. Can be either `raw`, `slack`, `ms_teams` or `pulumi_deployments`. Defaults to `raw`."
        },
        "name": {
          "type": "string",
          "description": "Webhook identifier generated by Pulumi Cloud."
        },
        "organizationName": {
          "type": "string",
          "description": "Name of the organization."
        },
        "payloadUrl": {
          "type": "string",
          "description": "URL to send request to."
        },
        "projectName": {
          "type": "string",
          "description": "Name of the project. Only specified if this is a stack webhook."
        },
        "secret": {
          "type": "string",
          "description": "Optional. secret used as the HMAC key. See [webhook docs](https://www.pulumi.com/docs/intro/pulumi-service/webhooks/#headers) for more information.",
          "secret": true
        },
        "stackName": {
          "type": "string",
          "description": "Name of the stack. Only specified if this is a stack webhook."
        }
      },
      "type": "object",
      "required": [
        "active",
        "displayName",
        "format",
        "name",
        "organizationName",
        "payloadUrl"
      ],
      "inputProperties": {
        "active": {
          "type": "boolean",
          "description": "Indicates whether this webhook is enabled or not."
        },
        "displayName": {
          "type": "string",
          "description": "The friendly name displayed in the Pulumi Cloud."
        },
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/types/pulumiservice:index:WebhookFilters"
          },
          "description": "Optional set of filters to apply to the webhook. See [webhook docs](https://www.pulumi.com/docs/intro/pulumi-service/webhooks/#filters) for more information."
        },
        "format": {
          "$ref": "#/types/pulumiservice:index:WebhookFormat",
          "description": "Format of the webhook payload. Can be either `raw` or `slack`. Defaults to `raw`.",
          "default": "raw"
        },
        "organizationName": {
          "type": "string",
          "description": "Name of the organization."
        },
        "payloadUrl": {
          "type": "string",
          "description": "URL to send request to."
        },
        "projectName": {
          "type": "string",
          "description": "Name of the project. Only needed if this is a stack webhook."
        },
        "secret": {
          "type": "string",
          "description": "Optional. secret used as the HMAC key. See [webhook docs](https://www.pulumi.com/docs/intro/pulumi-service/webhooks/#headers) for more information.",
          "secret": true
        },
        "stackName": {
          "type": "string",
          "description": "Name of the stack. Only needed if this is a stack webhook."
        }
      },
      "requiredInputs": [
        "active",
        "displayName",
        "organizationName",
        "payloadUrl"
      ]
    }
  }
}
