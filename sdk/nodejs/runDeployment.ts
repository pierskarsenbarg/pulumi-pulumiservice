// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Runs a deployment on a stack.
 */
export function runDeployment(args: RunDeploymentArgs, opts?: pulumi.InvokeOptions): Promise<RunDeploymentResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pulumiservice:index:RunDeployment", {
        "organization": args.organization,
        "project": args.project,
        "stack": args.stack,
    }, opts);
}

export interface RunDeploymentArgs {
    organization: string;
    project: string;
    stack: string;
}

export interface RunDeploymentResult {
    readonly consoleUrl: string;
    readonly id: string;
    readonly version: number;
}
/**
 * Runs a deployment on a stack.
 */
export function runDeploymentOutput(args: RunDeploymentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<RunDeploymentResult> {
    return pulumi.output(args).apply((a: any) => runDeployment(a, opts))
}

export interface RunDeploymentOutputArgs {
    organization: pulumi.Input<string>;
    project: pulumi.Input<string>;
    stack: pulumi.Input<string>;
}
