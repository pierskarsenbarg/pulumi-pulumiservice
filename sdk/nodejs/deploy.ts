// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * Runs a deployment on a stack and waits until it returns a final status (succeeded/failed).
 */
export function deploy(args: DeployArgs, opts?: pulumi.InvokeOptions): Promise<DeployResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pulumiservice:index:Deploy", {
        "inheritSettings": args.inheritSettings,
        "operation": args.operation,
        "organization": args.organization,
        "project": args.project,
        "stack": args.stack,
    }, opts);
}

export interface DeployArgs {
    inheritSettings?: boolean;
    operation?: string;
    organization: string;
    project: string;
    stack: string;
}

export interface DeployResult {
    readonly consoleUrl: string;
    readonly id: string;
    readonly status: enums.DeploymentStatus;
    readonly version: number;
}
/**
 * Runs a deployment on a stack and waits until it returns a final status (succeeded/failed).
 */
export function deployOutput(args: DeployOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<DeployResult> {
    return pulumi.output(args).apply((a: any) => deploy(a, opts))
}

export interface DeployOutputArgs {
    inheritSettings?: pulumi.Input<boolean>;
    operation?: pulumi.Input<string>;
    organization: pulumi.Input<string>;
    project: pulumi.Input<string>;
    stack: pulumi.Input<string>;
}
