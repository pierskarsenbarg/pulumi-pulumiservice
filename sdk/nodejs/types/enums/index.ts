// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***


export const PulumiOperation = {
    /**
     * Analogous to `pulumi up` command.
     */
    Update: "update",
    /**
     * Analogous to `pulumi preview` command.
     */
    Preview: "preview",
    /**
     * Analogous to `pulumi refresh` command.
     */
    Refresh: "refresh",
    /**
     * Analogous to `pulumi destroy` command.
     */
    Destroy: "destroy",
} as const;

export type PulumiOperation = (typeof PulumiOperation)[keyof typeof PulumiOperation];

export const TeamStackPermissionScope = {
    /**
     * Grants read permissions to stack.
     */
    Read: 101,
    /**
     * Grants edit permissions to stack.
     */
    Edit: 102,
    /**
     * Grants admin permissions to stack.
     */
    Admin: 103,
} as const;

export type TeamStackPermissionScope = (typeof TeamStackPermissionScope)[keyof typeof TeamStackPermissionScope];

export const WebhookFilters = {
    /**
     * Trigger a webhook when a stack is created. Only valid for org webhooks.
     */
    StackCreated: "stack_created",
    /**
     * Trigger a webhook when a stack is deleted. Only valid for org webhooks.
     */
    StackDeleted: "stack_deleted",
    /**
     * Trigger a webhook when a stack update succeeds.
     */
    UpdateSucceeded: "update_succeeded",
    /**
     * Trigger a webhook when a stack update fails.
     */
    UpdateFailed: "update_failed",
    /**
     * Trigger a webhook when a stack preview succeeds.
     */
    PreviewSucceeded: "preview_succeeded",
    /**
     * Trigger a webhook when a stack preview fails.
     */
    PreviewFailed: "preview_failed",
    /**
     * Trigger a webhook when a stack destroy succeeds.
     */
    DestroySucceeded: "destroy_succeeded",
    /**
     * Trigger a webhook when a stack destroy fails.
     */
    DestroyFailed: "destroy_failed",
    /**
     * Trigger a webhook when a stack refresh succeeds.
     */
    RefreshSucceeded: "refresh_succeeded",
    /**
     * Trigger a webhook when a stack refresh fails.
     */
    RefreshFailed: "refresh_failed",
    /**
     * Trigger a webhook when a deployment is queued.
     */
    DeploymentQueued: "deployment_queued",
    /**
     * Trigger a webhook when a deployment starts running.
     */
    DeploymentStarted: "deployment_started",
    /**
     * Trigger a webhook when a deployment succeeds.
     */
    DeploymentSucceeded: "deployment_succeeded",
    /**
     * Trigger a webhook when a deployment fails.
     */
    DeploymentFailed: "deployment_failed",
    /**
     * Trigger a webhook when drift is detected.
     */
    DriftDetected: "drift_detected",
    /**
     * Trigger a webhook when a drift detection run succeeds, regardless of whether drift is detected.
     */
    DriftDetectionSucceeded: "drift_detection_succeeded",
    /**
     * Trigger a webhook when a drift detection run fails.
     */
    DriftDetectionFailed: "drift_detection_failed",
    /**
     * Trigger a webhook when a drift remediation run succeeds.
     */
    DriftRemediationSucceeded: "drift_remediation_succeeded",
    /**
     * Trigger a webhook when a drift remediation run fails.
     */
    DriftRemediationFailed: "drift_remediation_failed",
} as const;

export type WebhookFilters = (typeof WebhookFilters)[keyof typeof WebhookFilters];

export const WebhookFormat = {
    /**
     * The default webhook format.
     */
    Raw: "raw",
    /**
     * Messages formatted for consumption by Slack incoming webhooks.
     */
    Slack: "slack",
    /**
     * Initiate deployments on a stack from a Pulumi Cloud webhook.
     */
    PulumiDeployments: "pulumi_deployments",
    /**
     * Messages formatted for consumption by Microsoft Teams incoming webhooks.
     */
    MicrosoftTeams: "ms_teams",
} as const;

export type WebhookFormat = (typeof WebhookFormat)[keyof typeof WebhookFormat];
