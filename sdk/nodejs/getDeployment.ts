// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * Gets information about a deployment.
 */
export function getDeployment(args: GetDeploymentArgs, opts?: pulumi.InvokeOptions): Promise<GetDeploymentResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pulumiservice:index:GetDeployment", {
        "deploymentId": args.deploymentId,
        "organization": args.organization,
        "project": args.project,
        "stack": args.stack,
        "version": args.version,
    }, opts);
}

export interface GetDeploymentArgs {
    deploymentId?: string;
    organization: string;
    project: string;
    stack: string;
    version?: number;
}

export interface GetDeploymentResult {
    readonly status?: enums.DeploymentStatus;
}
/**
 * Gets information about a deployment.
 */
export function getDeploymentOutput(args: GetDeploymentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDeploymentResult> {
    return pulumi.output(args).apply((a: any) => getDeployment(a, opts))
}

export interface GetDeploymentOutputArgs {
    deploymentId?: pulumi.Input<string>;
    organization: pulumi.Input<string>;
    project: pulumi.Input<string>;
    stack: pulumi.Input<string>;
    version?: pulumi.Input<number>;
}
