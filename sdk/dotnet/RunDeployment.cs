// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.PulumiService
{
    public static class RunDeployment
    {
        /// <summary>
        /// Runs a deployment on a stack.
        /// </summary>
        public static Task<RunDeploymentResult> InvokeAsync(RunDeploymentArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<RunDeploymentResult>("pulumiservice:index:RunDeployment", args ?? new RunDeploymentArgs(), options.WithDefaults());

        /// <summary>
        /// Runs a deployment on a stack.
        /// </summary>
        public static Output<RunDeploymentResult> Invoke(RunDeploymentInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<RunDeploymentResult>("pulumiservice:index:RunDeployment", args ?? new RunDeploymentInvokeArgs(), options.WithDefaults());
    }


    public sealed class RunDeploymentArgs : global::Pulumi.InvokeArgs
    {
        [Input("organization", required: true)]
        public string Organization { get; set; } = null!;

        [Input("project", required: true)]
        public string Project { get; set; } = null!;

        [Input("stack", required: true)]
        public string Stack { get; set; } = null!;

        public RunDeploymentArgs()
        {
        }
        public static new RunDeploymentArgs Empty => new RunDeploymentArgs();
    }

    public sealed class RunDeploymentInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("organization", required: true)]
        public Input<string> Organization { get; set; } = null!;

        [Input("project", required: true)]
        public Input<string> Project { get; set; } = null!;

        [Input("stack", required: true)]
        public Input<string> Stack { get; set; } = null!;

        public RunDeploymentInvokeArgs()
        {
        }
        public static new RunDeploymentInvokeArgs Empty => new RunDeploymentInvokeArgs();
    }


    [OutputType]
    public sealed class RunDeploymentResult
    {
        public readonly string ConsoleUrl;
        public readonly string Id;
        public readonly double Version;

        [OutputConstructor]
        private RunDeploymentResult(
            string consoleUrl,

            string id,

            double version)
        {
            ConsoleUrl = consoleUrl;
            Id = id;
            Version = version;
        }
    }
}
