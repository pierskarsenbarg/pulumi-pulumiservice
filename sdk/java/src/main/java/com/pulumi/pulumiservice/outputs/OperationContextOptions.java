// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pulumiservice.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class OperationContextOptions {
    /**
     * @return The shell to use to run commands during the deployment. Defaults to &#39;bash&#39;.
     * 
     */
    private @Nullable String shell;
    /**
     * @return Skip the default dependency installation step - use this to customize the dependency installation (e.g. if using yarn or poetry)
     * 
     */
    private @Nullable Boolean skipInstallDependencies;

    private OperationContextOptions() {}
    /**
     * @return The shell to use to run commands during the deployment. Defaults to &#39;bash&#39;.
     * 
     */
    public Optional<String> shell() {
        return Optional.ofNullable(this.shell);
    }
    /**
     * @return Skip the default dependency installation step - use this to customize the dependency installation (e.g. if using yarn or poetry)
     * 
     */
    public Optional<Boolean> skipInstallDependencies() {
        return Optional.ofNullable(this.skipInstallDependencies);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OperationContextOptions defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String shell;
        private @Nullable Boolean skipInstallDependencies;
        public Builder() {}
        public Builder(OperationContextOptions defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.shell = defaults.shell;
    	      this.skipInstallDependencies = defaults.skipInstallDependencies;
        }

        @CustomType.Setter
        public Builder shell(@Nullable String shell) {
            this.shell = shell;
            return this;
        }
        @CustomType.Setter
        public Builder skipInstallDependencies(@Nullable Boolean skipInstallDependencies) {
            this.skipInstallDependencies = skipInstallDependencies;
            return this;
        }
        public OperationContextOptions build() {
            final var o = new OperationContextOptions();
            o.shell = shell;
            o.skipInstallDependencies = skipInstallDependencies;
            return o;
        }
    }
}
