// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pulumiservice.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AWSOIDCConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final AWSOIDCConfigurationArgs Empty = new AWSOIDCConfigurationArgs();

    /**
     * Duration of the assume-role session
     * 
     */
    @Import(name="duration")
    private @Nullable Output<Integer> duration;

    /**
     * @return Duration of the assume-role session
     * 
     */
    public Optional<Output<Integer>> duration() {
        return Optional.ofNullable(this.duration);
    }

    /**
     * Optional set of IAM policy ARNs that further restrict the assume-role session
     * 
     */
    @Import(name="policyARNs")
    private @Nullable Output<List<String>> policyARNs;

    /**
     * @return Optional set of IAM policy ARNs that further restrict the assume-role session
     * 
     */
    public Optional<Output<List<String>>> policyARNs() {
        return Optional.ofNullable(this.policyARNs);
    }

    /**
     * The ARN of the role to assume using the OIDC token.
     * 
     */
    @Import(name="roleARN", required=true)
    private Output<String> roleARN;

    /**
     * @return The ARN of the role to assume using the OIDC token.
     * 
     */
    public Output<String> roleARN() {
        return this.roleARN;
    }

    /**
     * The name of the assume-role session.
     * 
     */
    @Import(name="sessionName")
    private @Nullable Output<String> sessionName;

    /**
     * @return The name of the assume-role session.
     * 
     */
    public Optional<Output<String>> sessionName() {
        return Optional.ofNullable(this.sessionName);
    }

    private AWSOIDCConfigurationArgs() {}

    private AWSOIDCConfigurationArgs(AWSOIDCConfigurationArgs $) {
        this.duration = $.duration;
        this.policyARNs = $.policyARNs;
        this.roleARN = $.roleARN;
        this.sessionName = $.sessionName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AWSOIDCConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AWSOIDCConfigurationArgs $;

        public Builder() {
            $ = new AWSOIDCConfigurationArgs();
        }

        public Builder(AWSOIDCConfigurationArgs defaults) {
            $ = new AWSOIDCConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param duration Duration of the assume-role session
         * 
         * @return builder
         * 
         */
        public Builder duration(@Nullable Output<Integer> duration) {
            $.duration = duration;
            return this;
        }

        /**
         * @param duration Duration of the assume-role session
         * 
         * @return builder
         * 
         */
        public Builder duration(Integer duration) {
            return duration(Output.of(duration));
        }

        /**
         * @param policyARNs Optional set of IAM policy ARNs that further restrict the assume-role session
         * 
         * @return builder
         * 
         */
        public Builder policyARNs(@Nullable Output<List<String>> policyARNs) {
            $.policyARNs = policyARNs;
            return this;
        }

        /**
         * @param policyARNs Optional set of IAM policy ARNs that further restrict the assume-role session
         * 
         * @return builder
         * 
         */
        public Builder policyARNs(List<String> policyARNs) {
            return policyARNs(Output.of(policyARNs));
        }

        /**
         * @param policyARNs Optional set of IAM policy ARNs that further restrict the assume-role session
         * 
         * @return builder
         * 
         */
        public Builder policyARNs(String... policyARNs) {
            return policyARNs(List.of(policyARNs));
        }

        /**
         * @param roleARN The ARN of the role to assume using the OIDC token.
         * 
         * @return builder
         * 
         */
        public Builder roleARN(Output<String> roleARN) {
            $.roleARN = roleARN;
            return this;
        }

        /**
         * @param roleARN The ARN of the role to assume using the OIDC token.
         * 
         * @return builder
         * 
         */
        public Builder roleARN(String roleARN) {
            return roleARN(Output.of(roleARN));
        }

        /**
         * @param sessionName The name of the assume-role session.
         * 
         * @return builder
         * 
         */
        public Builder sessionName(@Nullable Output<String> sessionName) {
            $.sessionName = sessionName;
            return this;
        }

        /**
         * @param sessionName The name of the assume-role session.
         * 
         * @return builder
         * 
         */
        public Builder sessionName(String sessionName) {
            return sessionName(Output.of(sessionName));
        }

        public AWSOIDCConfigurationArgs build() {
            $.roleARN = Objects.requireNonNull($.roleARN, "expected parameter 'roleARN' to be non-null");
            return $;
        }
    }

}
