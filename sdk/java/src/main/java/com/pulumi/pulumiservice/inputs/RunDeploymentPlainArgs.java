// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pulumiservice.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class RunDeploymentPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final RunDeploymentPlainArgs Empty = new RunDeploymentPlainArgs();

    @Import(name="organization", required=true)
    private String organization;

    public String organization() {
        return this.organization;
    }

    @Import(name="project", required=true)
    private String project;

    public String project() {
        return this.project;
    }

    @Import(name="stack", required=true)
    private String stack;

    public String stack() {
        return this.stack;
    }

    private RunDeploymentPlainArgs() {}

    private RunDeploymentPlainArgs(RunDeploymentPlainArgs $) {
        this.organization = $.organization;
        this.project = $.project;
        this.stack = $.stack;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RunDeploymentPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RunDeploymentPlainArgs $;

        public Builder() {
            $ = new RunDeploymentPlainArgs();
        }

        public Builder(RunDeploymentPlainArgs defaults) {
            $ = new RunDeploymentPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder organization(String organization) {
            $.organization = organization;
            return this;
        }

        public Builder project(String project) {
            $.project = project;
            return this;
        }

        public Builder stack(String stack) {
            $.stack = stack;
            return this;
        }

        public RunDeploymentPlainArgs build() {
            $.organization = Objects.requireNonNull($.organization, "expected parameter 'organization' to be non-null");
            $.project = Objects.requireNonNull($.project, "expected parameter 'project' to be non-null");
            $.stack = Objects.requireNonNull($.stack, "expected parameter 'stack' to be non-null");
            return $;
        }
    }

}
