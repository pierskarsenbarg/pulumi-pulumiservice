// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pulumiservice;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.pulumiservice.inputs.StackDeploymentSettingsArgs;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DeploymentArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeploymentArgs Empty = new DeploymentArgs();

    /**
     * The stack configuration to use for the deployment.
     * 
     */
    @Import(name="config")
    private @Nullable Output<Map<String,Object>> config;

    /**
     * @return The stack configuration to use for the deployment.
     * 
     */
    public Optional<Output<Map<String,Object>>> config() {
        return Optional.ofNullable(this.config);
    }

    /**
     * The settings to use for the deployment.
     * 
     */
    @Import(name="settings")
    private @Nullable Output<StackDeploymentSettingsArgs> settings;

    /**
     * @return The settings to use for the deployment.
     * 
     */
    public Optional<Output<StackDeploymentSettingsArgs>> settings() {
        return Optional.ofNullable(this.settings);
    }

    /**
     * The fully-qualified name of the stack to deploy.
     * 
     */
    @Import(name="stack", required=true)
    private Output<String> stack;

    /**
     * @return The fully-qualified name of the stack to deploy.
     * 
     */
    public Output<String> stack() {
        return this.stack;
    }

    private DeploymentArgs() {}

    private DeploymentArgs(DeploymentArgs $) {
        this.config = $.config;
        this.settings = $.settings;
        this.stack = $.stack;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeploymentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeploymentArgs $;

        public Builder() {
            $ = new DeploymentArgs();
        }

        public Builder(DeploymentArgs defaults) {
            $ = new DeploymentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param config The stack configuration to use for the deployment.
         * 
         * @return builder
         * 
         */
        public Builder config(@Nullable Output<Map<String,Object>> config) {
            $.config = config;
            return this;
        }

        /**
         * @param config The stack configuration to use for the deployment.
         * 
         * @return builder
         * 
         */
        public Builder config(Map<String,Object> config) {
            return config(Output.of(config));
        }

        /**
         * @param settings The settings to use for the deployment.
         * 
         * @return builder
         * 
         */
        public Builder settings(@Nullable Output<StackDeploymentSettingsArgs> settings) {
            $.settings = settings;
            return this;
        }

        /**
         * @param settings The settings to use for the deployment.
         * 
         * @return builder
         * 
         */
        public Builder settings(StackDeploymentSettingsArgs settings) {
            return settings(Output.of(settings));
        }

        /**
         * @param stack The fully-qualified name of the stack to deploy.
         * 
         * @return builder
         * 
         */
        public Builder stack(Output<String> stack) {
            $.stack = stack;
            return this;
        }

        /**
         * @param stack The fully-qualified name of the stack to deploy.
         * 
         * @return builder
         * 
         */
        public Builder stack(String stack) {
            return stack(Output.of(stack));
        }

        public DeploymentArgs build() {
            $.stack = Objects.requireNonNull($.stack, "expected parameter 'stack' to be non-null");
            return $;
        }
    }

}
