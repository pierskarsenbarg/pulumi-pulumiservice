// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pulumiservice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The executor context defines information about the executor where the deployment is executed. If unspecified, the default 'pulumi/pulumi' image is used.
type DeploymentSettingsExecutorContext struct {
	// Allows overriding the default executor image with a custom image. E.g. 'pulumi/pulumi-nodejs:latest'
	ExecutorImage string `pulumi:"executorImage"`
}

// DeploymentSettingsExecutorContextInput is an input type that accepts DeploymentSettingsExecutorContextArgs and DeploymentSettingsExecutorContextOutput values.
// You can construct a concrete instance of `DeploymentSettingsExecutorContextInput` via:
//
//	DeploymentSettingsExecutorContextArgs{...}
type DeploymentSettingsExecutorContextInput interface {
	pulumi.Input

	ToDeploymentSettingsExecutorContextOutput() DeploymentSettingsExecutorContextOutput
	ToDeploymentSettingsExecutorContextOutputWithContext(context.Context) DeploymentSettingsExecutorContextOutput
}

// The executor context defines information about the executor where the deployment is executed. If unspecified, the default 'pulumi/pulumi' image is used.
type DeploymentSettingsExecutorContextArgs struct {
	// Allows overriding the default executor image with a custom image. E.g. 'pulumi/pulumi-nodejs:latest'
	ExecutorImage pulumi.StringInput `pulumi:"executorImage"`
}

func (DeploymentSettingsExecutorContextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentSettingsExecutorContext)(nil)).Elem()
}

func (i DeploymentSettingsExecutorContextArgs) ToDeploymentSettingsExecutorContextOutput() DeploymentSettingsExecutorContextOutput {
	return i.ToDeploymentSettingsExecutorContextOutputWithContext(context.Background())
}

func (i DeploymentSettingsExecutorContextArgs) ToDeploymentSettingsExecutorContextOutputWithContext(ctx context.Context) DeploymentSettingsExecutorContextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSettingsExecutorContextOutput)
}

func (i DeploymentSettingsExecutorContextArgs) ToDeploymentSettingsExecutorContextPtrOutput() DeploymentSettingsExecutorContextPtrOutput {
	return i.ToDeploymentSettingsExecutorContextPtrOutputWithContext(context.Background())
}

func (i DeploymentSettingsExecutorContextArgs) ToDeploymentSettingsExecutorContextPtrOutputWithContext(ctx context.Context) DeploymentSettingsExecutorContextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSettingsExecutorContextOutput).ToDeploymentSettingsExecutorContextPtrOutputWithContext(ctx)
}

// DeploymentSettingsExecutorContextPtrInput is an input type that accepts DeploymentSettingsExecutorContextArgs, DeploymentSettingsExecutorContextPtr and DeploymentSettingsExecutorContextPtrOutput values.
// You can construct a concrete instance of `DeploymentSettingsExecutorContextPtrInput` via:
//
//	        DeploymentSettingsExecutorContextArgs{...}
//
//	or:
//
//	        nil
type DeploymentSettingsExecutorContextPtrInput interface {
	pulumi.Input

	ToDeploymentSettingsExecutorContextPtrOutput() DeploymentSettingsExecutorContextPtrOutput
	ToDeploymentSettingsExecutorContextPtrOutputWithContext(context.Context) DeploymentSettingsExecutorContextPtrOutput
}

type deploymentSettingsExecutorContextPtrType DeploymentSettingsExecutorContextArgs

func DeploymentSettingsExecutorContextPtr(v *DeploymentSettingsExecutorContextArgs) DeploymentSettingsExecutorContextPtrInput {
	return (*deploymentSettingsExecutorContextPtrType)(v)
}

func (*deploymentSettingsExecutorContextPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentSettingsExecutorContext)(nil)).Elem()
}

func (i *deploymentSettingsExecutorContextPtrType) ToDeploymentSettingsExecutorContextPtrOutput() DeploymentSettingsExecutorContextPtrOutput {
	return i.ToDeploymentSettingsExecutorContextPtrOutputWithContext(context.Background())
}

func (i *deploymentSettingsExecutorContextPtrType) ToDeploymentSettingsExecutorContextPtrOutputWithContext(ctx context.Context) DeploymentSettingsExecutorContextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSettingsExecutorContextPtrOutput)
}

// The executor context defines information about the executor where the deployment is executed. If unspecified, the default 'pulumi/pulumi' image is used.
type DeploymentSettingsExecutorContextOutput struct{ *pulumi.OutputState }

func (DeploymentSettingsExecutorContextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentSettingsExecutorContext)(nil)).Elem()
}

func (o DeploymentSettingsExecutorContextOutput) ToDeploymentSettingsExecutorContextOutput() DeploymentSettingsExecutorContextOutput {
	return o
}

func (o DeploymentSettingsExecutorContextOutput) ToDeploymentSettingsExecutorContextOutputWithContext(ctx context.Context) DeploymentSettingsExecutorContextOutput {
	return o
}

func (o DeploymentSettingsExecutorContextOutput) ToDeploymentSettingsExecutorContextPtrOutput() DeploymentSettingsExecutorContextPtrOutput {
	return o.ToDeploymentSettingsExecutorContextPtrOutputWithContext(context.Background())
}

func (o DeploymentSettingsExecutorContextOutput) ToDeploymentSettingsExecutorContextPtrOutputWithContext(ctx context.Context) DeploymentSettingsExecutorContextPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentSettingsExecutorContext) *DeploymentSettingsExecutorContext {
		return &v
	}).(DeploymentSettingsExecutorContextPtrOutput)
}

// Allows overriding the default executor image with a custom image. E.g. 'pulumi/pulumi-nodejs:latest'
func (o DeploymentSettingsExecutorContextOutput) ExecutorImage() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentSettingsExecutorContext) string { return v.ExecutorImage }).(pulumi.StringOutput)
}

type DeploymentSettingsExecutorContextPtrOutput struct{ *pulumi.OutputState }

func (DeploymentSettingsExecutorContextPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentSettingsExecutorContext)(nil)).Elem()
}

func (o DeploymentSettingsExecutorContextPtrOutput) ToDeploymentSettingsExecutorContextPtrOutput() DeploymentSettingsExecutorContextPtrOutput {
	return o
}

func (o DeploymentSettingsExecutorContextPtrOutput) ToDeploymentSettingsExecutorContextPtrOutputWithContext(ctx context.Context) DeploymentSettingsExecutorContextPtrOutput {
	return o
}

func (o DeploymentSettingsExecutorContextPtrOutput) Elem() DeploymentSettingsExecutorContextOutput {
	return o.ApplyT(func(v *DeploymentSettingsExecutorContext) DeploymentSettingsExecutorContext {
		if v != nil {
			return *v
		}
		var ret DeploymentSettingsExecutorContext
		return ret
	}).(DeploymentSettingsExecutorContextOutput)
}

// Allows overriding the default executor image with a custom image. E.g. 'pulumi/pulumi-nodejs:latest'
func (o DeploymentSettingsExecutorContextPtrOutput) ExecutorImage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentSettingsExecutorContext) *string {
		if v == nil {
			return nil
		}
		return &v.ExecutorImage
	}).(pulumi.StringPtrOutput)
}

// Git source settings for a deployment.
type DeploymentSettingsGitAuthBasicAuth struct {
	// Password for git basic authentication
	Password string `pulumi:"password"`
	// User name for git basic authentication
	Username string `pulumi:"username"`
}

// DeploymentSettingsGitAuthBasicAuthInput is an input type that accepts DeploymentSettingsGitAuthBasicAuthArgs and DeploymentSettingsGitAuthBasicAuthOutput values.
// You can construct a concrete instance of `DeploymentSettingsGitAuthBasicAuthInput` via:
//
//	DeploymentSettingsGitAuthBasicAuthArgs{...}
type DeploymentSettingsGitAuthBasicAuthInput interface {
	pulumi.Input

	ToDeploymentSettingsGitAuthBasicAuthOutput() DeploymentSettingsGitAuthBasicAuthOutput
	ToDeploymentSettingsGitAuthBasicAuthOutputWithContext(context.Context) DeploymentSettingsGitAuthBasicAuthOutput
}

// Git source settings for a deployment.
type DeploymentSettingsGitAuthBasicAuthArgs struct {
	// Password for git basic authentication
	Password pulumi.StringInput `pulumi:"password"`
	// User name for git basic authentication
	Username pulumi.StringInput `pulumi:"username"`
}

func (DeploymentSettingsGitAuthBasicAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentSettingsGitAuthBasicAuth)(nil)).Elem()
}

func (i DeploymentSettingsGitAuthBasicAuthArgs) ToDeploymentSettingsGitAuthBasicAuthOutput() DeploymentSettingsGitAuthBasicAuthOutput {
	return i.ToDeploymentSettingsGitAuthBasicAuthOutputWithContext(context.Background())
}

func (i DeploymentSettingsGitAuthBasicAuthArgs) ToDeploymentSettingsGitAuthBasicAuthOutputWithContext(ctx context.Context) DeploymentSettingsGitAuthBasicAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSettingsGitAuthBasicAuthOutput)
}

func (i DeploymentSettingsGitAuthBasicAuthArgs) ToDeploymentSettingsGitAuthBasicAuthPtrOutput() DeploymentSettingsGitAuthBasicAuthPtrOutput {
	return i.ToDeploymentSettingsGitAuthBasicAuthPtrOutputWithContext(context.Background())
}

func (i DeploymentSettingsGitAuthBasicAuthArgs) ToDeploymentSettingsGitAuthBasicAuthPtrOutputWithContext(ctx context.Context) DeploymentSettingsGitAuthBasicAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSettingsGitAuthBasicAuthOutput).ToDeploymentSettingsGitAuthBasicAuthPtrOutputWithContext(ctx)
}

// DeploymentSettingsGitAuthBasicAuthPtrInput is an input type that accepts DeploymentSettingsGitAuthBasicAuthArgs, DeploymentSettingsGitAuthBasicAuthPtr and DeploymentSettingsGitAuthBasicAuthPtrOutput values.
// You can construct a concrete instance of `DeploymentSettingsGitAuthBasicAuthPtrInput` via:
//
//	        DeploymentSettingsGitAuthBasicAuthArgs{...}
//
//	or:
//
//	        nil
type DeploymentSettingsGitAuthBasicAuthPtrInput interface {
	pulumi.Input

	ToDeploymentSettingsGitAuthBasicAuthPtrOutput() DeploymentSettingsGitAuthBasicAuthPtrOutput
	ToDeploymentSettingsGitAuthBasicAuthPtrOutputWithContext(context.Context) DeploymentSettingsGitAuthBasicAuthPtrOutput
}

type deploymentSettingsGitAuthBasicAuthPtrType DeploymentSettingsGitAuthBasicAuthArgs

func DeploymentSettingsGitAuthBasicAuthPtr(v *DeploymentSettingsGitAuthBasicAuthArgs) DeploymentSettingsGitAuthBasicAuthPtrInput {
	return (*deploymentSettingsGitAuthBasicAuthPtrType)(v)
}

func (*deploymentSettingsGitAuthBasicAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentSettingsGitAuthBasicAuth)(nil)).Elem()
}

func (i *deploymentSettingsGitAuthBasicAuthPtrType) ToDeploymentSettingsGitAuthBasicAuthPtrOutput() DeploymentSettingsGitAuthBasicAuthPtrOutput {
	return i.ToDeploymentSettingsGitAuthBasicAuthPtrOutputWithContext(context.Background())
}

func (i *deploymentSettingsGitAuthBasicAuthPtrType) ToDeploymentSettingsGitAuthBasicAuthPtrOutputWithContext(ctx context.Context) DeploymentSettingsGitAuthBasicAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSettingsGitAuthBasicAuthPtrOutput)
}

// Git source settings for a deployment.
type DeploymentSettingsGitAuthBasicAuthOutput struct{ *pulumi.OutputState }

func (DeploymentSettingsGitAuthBasicAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentSettingsGitAuthBasicAuth)(nil)).Elem()
}

func (o DeploymentSettingsGitAuthBasicAuthOutput) ToDeploymentSettingsGitAuthBasicAuthOutput() DeploymentSettingsGitAuthBasicAuthOutput {
	return o
}

func (o DeploymentSettingsGitAuthBasicAuthOutput) ToDeploymentSettingsGitAuthBasicAuthOutputWithContext(ctx context.Context) DeploymentSettingsGitAuthBasicAuthOutput {
	return o
}

func (o DeploymentSettingsGitAuthBasicAuthOutput) ToDeploymentSettingsGitAuthBasicAuthPtrOutput() DeploymentSettingsGitAuthBasicAuthPtrOutput {
	return o.ToDeploymentSettingsGitAuthBasicAuthPtrOutputWithContext(context.Background())
}

func (o DeploymentSettingsGitAuthBasicAuthOutput) ToDeploymentSettingsGitAuthBasicAuthPtrOutputWithContext(ctx context.Context) DeploymentSettingsGitAuthBasicAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentSettingsGitAuthBasicAuth) *DeploymentSettingsGitAuthBasicAuth {
		return &v
	}).(DeploymentSettingsGitAuthBasicAuthPtrOutput)
}

// Password for git basic authentication
func (o DeploymentSettingsGitAuthBasicAuthOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentSettingsGitAuthBasicAuth) string { return v.Password }).(pulumi.StringOutput)
}

// User name for git basic authentication
func (o DeploymentSettingsGitAuthBasicAuthOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentSettingsGitAuthBasicAuth) string { return v.Username }).(pulumi.StringOutput)
}

type DeploymentSettingsGitAuthBasicAuthPtrOutput struct{ *pulumi.OutputState }

func (DeploymentSettingsGitAuthBasicAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentSettingsGitAuthBasicAuth)(nil)).Elem()
}

func (o DeploymentSettingsGitAuthBasicAuthPtrOutput) ToDeploymentSettingsGitAuthBasicAuthPtrOutput() DeploymentSettingsGitAuthBasicAuthPtrOutput {
	return o
}

func (o DeploymentSettingsGitAuthBasicAuthPtrOutput) ToDeploymentSettingsGitAuthBasicAuthPtrOutputWithContext(ctx context.Context) DeploymentSettingsGitAuthBasicAuthPtrOutput {
	return o
}

func (o DeploymentSettingsGitAuthBasicAuthPtrOutput) Elem() DeploymentSettingsGitAuthBasicAuthOutput {
	return o.ApplyT(func(v *DeploymentSettingsGitAuthBasicAuth) DeploymentSettingsGitAuthBasicAuth {
		if v != nil {
			return *v
		}
		var ret DeploymentSettingsGitAuthBasicAuth
		return ret
	}).(DeploymentSettingsGitAuthBasicAuthOutput)
}

// Password for git basic authentication
func (o DeploymentSettingsGitAuthBasicAuthPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentSettingsGitAuthBasicAuth) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// User name for git basic authentication
func (o DeploymentSettingsGitAuthBasicAuthPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentSettingsGitAuthBasicAuth) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

// Git source settings for a deployment.
type DeploymentSettingsGitAuthSSHAuth struct {
	// Optional password for SSH authentication
	Password *string `pulumi:"password"`
	// SSH private key
	SshPrivateKey string `pulumi:"sshPrivateKey"`
}

// DeploymentSettingsGitAuthSSHAuthInput is an input type that accepts DeploymentSettingsGitAuthSSHAuthArgs and DeploymentSettingsGitAuthSSHAuthOutput values.
// You can construct a concrete instance of `DeploymentSettingsGitAuthSSHAuthInput` via:
//
//	DeploymentSettingsGitAuthSSHAuthArgs{...}
type DeploymentSettingsGitAuthSSHAuthInput interface {
	pulumi.Input

	ToDeploymentSettingsGitAuthSSHAuthOutput() DeploymentSettingsGitAuthSSHAuthOutput
	ToDeploymentSettingsGitAuthSSHAuthOutputWithContext(context.Context) DeploymentSettingsGitAuthSSHAuthOutput
}

// Git source settings for a deployment.
type DeploymentSettingsGitAuthSSHAuthArgs struct {
	// Optional password for SSH authentication
	Password pulumi.StringPtrInput `pulumi:"password"`
	// SSH private key
	SshPrivateKey pulumi.StringInput `pulumi:"sshPrivateKey"`
}

func (DeploymentSettingsGitAuthSSHAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentSettingsGitAuthSSHAuth)(nil)).Elem()
}

func (i DeploymentSettingsGitAuthSSHAuthArgs) ToDeploymentSettingsGitAuthSSHAuthOutput() DeploymentSettingsGitAuthSSHAuthOutput {
	return i.ToDeploymentSettingsGitAuthSSHAuthOutputWithContext(context.Background())
}

func (i DeploymentSettingsGitAuthSSHAuthArgs) ToDeploymentSettingsGitAuthSSHAuthOutputWithContext(ctx context.Context) DeploymentSettingsGitAuthSSHAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSettingsGitAuthSSHAuthOutput)
}

func (i DeploymentSettingsGitAuthSSHAuthArgs) ToDeploymentSettingsGitAuthSSHAuthPtrOutput() DeploymentSettingsGitAuthSSHAuthPtrOutput {
	return i.ToDeploymentSettingsGitAuthSSHAuthPtrOutputWithContext(context.Background())
}

func (i DeploymentSettingsGitAuthSSHAuthArgs) ToDeploymentSettingsGitAuthSSHAuthPtrOutputWithContext(ctx context.Context) DeploymentSettingsGitAuthSSHAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSettingsGitAuthSSHAuthOutput).ToDeploymentSettingsGitAuthSSHAuthPtrOutputWithContext(ctx)
}

// DeploymentSettingsGitAuthSSHAuthPtrInput is an input type that accepts DeploymentSettingsGitAuthSSHAuthArgs, DeploymentSettingsGitAuthSSHAuthPtr and DeploymentSettingsGitAuthSSHAuthPtrOutput values.
// You can construct a concrete instance of `DeploymentSettingsGitAuthSSHAuthPtrInput` via:
//
//	        DeploymentSettingsGitAuthSSHAuthArgs{...}
//
//	or:
//
//	        nil
type DeploymentSettingsGitAuthSSHAuthPtrInput interface {
	pulumi.Input

	ToDeploymentSettingsGitAuthSSHAuthPtrOutput() DeploymentSettingsGitAuthSSHAuthPtrOutput
	ToDeploymentSettingsGitAuthSSHAuthPtrOutputWithContext(context.Context) DeploymentSettingsGitAuthSSHAuthPtrOutput
}

type deploymentSettingsGitAuthSSHAuthPtrType DeploymentSettingsGitAuthSSHAuthArgs

func DeploymentSettingsGitAuthSSHAuthPtr(v *DeploymentSettingsGitAuthSSHAuthArgs) DeploymentSettingsGitAuthSSHAuthPtrInput {
	return (*deploymentSettingsGitAuthSSHAuthPtrType)(v)
}

func (*deploymentSettingsGitAuthSSHAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentSettingsGitAuthSSHAuth)(nil)).Elem()
}

func (i *deploymentSettingsGitAuthSSHAuthPtrType) ToDeploymentSettingsGitAuthSSHAuthPtrOutput() DeploymentSettingsGitAuthSSHAuthPtrOutput {
	return i.ToDeploymentSettingsGitAuthSSHAuthPtrOutputWithContext(context.Background())
}

func (i *deploymentSettingsGitAuthSSHAuthPtrType) ToDeploymentSettingsGitAuthSSHAuthPtrOutputWithContext(ctx context.Context) DeploymentSettingsGitAuthSSHAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSettingsGitAuthSSHAuthPtrOutput)
}

// Git source settings for a deployment.
type DeploymentSettingsGitAuthSSHAuthOutput struct{ *pulumi.OutputState }

func (DeploymentSettingsGitAuthSSHAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentSettingsGitAuthSSHAuth)(nil)).Elem()
}

func (o DeploymentSettingsGitAuthSSHAuthOutput) ToDeploymentSettingsGitAuthSSHAuthOutput() DeploymentSettingsGitAuthSSHAuthOutput {
	return o
}

func (o DeploymentSettingsGitAuthSSHAuthOutput) ToDeploymentSettingsGitAuthSSHAuthOutputWithContext(ctx context.Context) DeploymentSettingsGitAuthSSHAuthOutput {
	return o
}

func (o DeploymentSettingsGitAuthSSHAuthOutput) ToDeploymentSettingsGitAuthSSHAuthPtrOutput() DeploymentSettingsGitAuthSSHAuthPtrOutput {
	return o.ToDeploymentSettingsGitAuthSSHAuthPtrOutputWithContext(context.Background())
}

func (o DeploymentSettingsGitAuthSSHAuthOutput) ToDeploymentSettingsGitAuthSSHAuthPtrOutputWithContext(ctx context.Context) DeploymentSettingsGitAuthSSHAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentSettingsGitAuthSSHAuth) *DeploymentSettingsGitAuthSSHAuth {
		return &v
	}).(DeploymentSettingsGitAuthSSHAuthPtrOutput)
}

// Optional password for SSH authentication
func (o DeploymentSettingsGitAuthSSHAuthOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentSettingsGitAuthSSHAuth) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// SSH private key
func (o DeploymentSettingsGitAuthSSHAuthOutput) SshPrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentSettingsGitAuthSSHAuth) string { return v.SshPrivateKey }).(pulumi.StringOutput)
}

type DeploymentSettingsGitAuthSSHAuthPtrOutput struct{ *pulumi.OutputState }

func (DeploymentSettingsGitAuthSSHAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentSettingsGitAuthSSHAuth)(nil)).Elem()
}

func (o DeploymentSettingsGitAuthSSHAuthPtrOutput) ToDeploymentSettingsGitAuthSSHAuthPtrOutput() DeploymentSettingsGitAuthSSHAuthPtrOutput {
	return o
}

func (o DeploymentSettingsGitAuthSSHAuthPtrOutput) ToDeploymentSettingsGitAuthSSHAuthPtrOutputWithContext(ctx context.Context) DeploymentSettingsGitAuthSSHAuthPtrOutput {
	return o
}

func (o DeploymentSettingsGitAuthSSHAuthPtrOutput) Elem() DeploymentSettingsGitAuthSSHAuthOutput {
	return o.ApplyT(func(v *DeploymentSettingsGitAuthSSHAuth) DeploymentSettingsGitAuthSSHAuth {
		if v != nil {
			return *v
		}
		var ret DeploymentSettingsGitAuthSSHAuth
		return ret
	}).(DeploymentSettingsGitAuthSSHAuthOutput)
}

// Optional password for SSH authentication
func (o DeploymentSettingsGitAuthSSHAuthPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentSettingsGitAuthSSHAuth) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// SSH private key
func (o DeploymentSettingsGitAuthSSHAuthPtrOutput) SshPrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentSettingsGitAuthSSHAuth) *string {
		if v == nil {
			return nil
		}
		return &v.SshPrivateKey
	}).(pulumi.StringPtrOutput)
}

// Git source settings for a deployment.
type DeploymentSettingsGitSource struct {
	// The branch to deploy. One of either `branch` or `commit` must be specified.
	Branch *string `pulumi:"branch"`
	// The commit to deploy. One of either `branch` or `commit` must be specified.
	Commit *string `pulumi:"commit"`
	// Git authentication configuration for this deployment. Should not be specified if there are `gitHub` settings for this deployment.
	GitAuth *DeploymentSettingsGitSourceGitAuth `pulumi:"gitAuth"`
	// The directory within the repository where the Pulumi.yaml is located.
	RepoDir *string `pulumi:"repoDir"`
	// The repository URL to use for git settings. Should not be specified if there are `gitHub` settings for this deployment.
	RepoUrl *string `pulumi:"repoUrl"`
}

// DeploymentSettingsGitSourceInput is an input type that accepts DeploymentSettingsGitSourceArgs and DeploymentSettingsGitSourceOutput values.
// You can construct a concrete instance of `DeploymentSettingsGitSourceInput` via:
//
//	DeploymentSettingsGitSourceArgs{...}
type DeploymentSettingsGitSourceInput interface {
	pulumi.Input

	ToDeploymentSettingsGitSourceOutput() DeploymentSettingsGitSourceOutput
	ToDeploymentSettingsGitSourceOutputWithContext(context.Context) DeploymentSettingsGitSourceOutput
}

// Git source settings for a deployment.
type DeploymentSettingsGitSourceArgs struct {
	// The branch to deploy. One of either `branch` or `commit` must be specified.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// The commit to deploy. One of either `branch` or `commit` must be specified.
	Commit pulumi.StringPtrInput `pulumi:"commit"`
	// Git authentication configuration for this deployment. Should not be specified if there are `gitHub` settings for this deployment.
	GitAuth DeploymentSettingsGitSourceGitAuthPtrInput `pulumi:"gitAuth"`
	// The directory within the repository where the Pulumi.yaml is located.
	RepoDir pulumi.StringPtrInput `pulumi:"repoDir"`
	// The repository URL to use for git settings. Should not be specified if there are `gitHub` settings for this deployment.
	RepoUrl pulumi.StringPtrInput `pulumi:"repoUrl"`
}

func (DeploymentSettingsGitSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentSettingsGitSource)(nil)).Elem()
}

func (i DeploymentSettingsGitSourceArgs) ToDeploymentSettingsGitSourceOutput() DeploymentSettingsGitSourceOutput {
	return i.ToDeploymentSettingsGitSourceOutputWithContext(context.Background())
}

func (i DeploymentSettingsGitSourceArgs) ToDeploymentSettingsGitSourceOutputWithContext(ctx context.Context) DeploymentSettingsGitSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSettingsGitSourceOutput)
}

func (i DeploymentSettingsGitSourceArgs) ToDeploymentSettingsGitSourcePtrOutput() DeploymentSettingsGitSourcePtrOutput {
	return i.ToDeploymentSettingsGitSourcePtrOutputWithContext(context.Background())
}

func (i DeploymentSettingsGitSourceArgs) ToDeploymentSettingsGitSourcePtrOutputWithContext(ctx context.Context) DeploymentSettingsGitSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSettingsGitSourceOutput).ToDeploymentSettingsGitSourcePtrOutputWithContext(ctx)
}

// DeploymentSettingsGitSourcePtrInput is an input type that accepts DeploymentSettingsGitSourceArgs, DeploymentSettingsGitSourcePtr and DeploymentSettingsGitSourcePtrOutput values.
// You can construct a concrete instance of `DeploymentSettingsGitSourcePtrInput` via:
//
//	        DeploymentSettingsGitSourceArgs{...}
//
//	or:
//
//	        nil
type DeploymentSettingsGitSourcePtrInput interface {
	pulumi.Input

	ToDeploymentSettingsGitSourcePtrOutput() DeploymentSettingsGitSourcePtrOutput
	ToDeploymentSettingsGitSourcePtrOutputWithContext(context.Context) DeploymentSettingsGitSourcePtrOutput
}

type deploymentSettingsGitSourcePtrType DeploymentSettingsGitSourceArgs

func DeploymentSettingsGitSourcePtr(v *DeploymentSettingsGitSourceArgs) DeploymentSettingsGitSourcePtrInput {
	return (*deploymentSettingsGitSourcePtrType)(v)
}

func (*deploymentSettingsGitSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentSettingsGitSource)(nil)).Elem()
}

func (i *deploymentSettingsGitSourcePtrType) ToDeploymentSettingsGitSourcePtrOutput() DeploymentSettingsGitSourcePtrOutput {
	return i.ToDeploymentSettingsGitSourcePtrOutputWithContext(context.Background())
}

func (i *deploymentSettingsGitSourcePtrType) ToDeploymentSettingsGitSourcePtrOutputWithContext(ctx context.Context) DeploymentSettingsGitSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSettingsGitSourcePtrOutput)
}

// Git source settings for a deployment.
type DeploymentSettingsGitSourceOutput struct{ *pulumi.OutputState }

func (DeploymentSettingsGitSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentSettingsGitSource)(nil)).Elem()
}

func (o DeploymentSettingsGitSourceOutput) ToDeploymentSettingsGitSourceOutput() DeploymentSettingsGitSourceOutput {
	return o
}

func (o DeploymentSettingsGitSourceOutput) ToDeploymentSettingsGitSourceOutputWithContext(ctx context.Context) DeploymentSettingsGitSourceOutput {
	return o
}

func (o DeploymentSettingsGitSourceOutput) ToDeploymentSettingsGitSourcePtrOutput() DeploymentSettingsGitSourcePtrOutput {
	return o.ToDeploymentSettingsGitSourcePtrOutputWithContext(context.Background())
}

func (o DeploymentSettingsGitSourceOutput) ToDeploymentSettingsGitSourcePtrOutputWithContext(ctx context.Context) DeploymentSettingsGitSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentSettingsGitSource) *DeploymentSettingsGitSource {
		return &v
	}).(DeploymentSettingsGitSourcePtrOutput)
}

// The branch to deploy. One of either `branch` or `commit` must be specified.
func (o DeploymentSettingsGitSourceOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentSettingsGitSource) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// The commit to deploy. One of either `branch` or `commit` must be specified.
func (o DeploymentSettingsGitSourceOutput) Commit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentSettingsGitSource) *string { return v.Commit }).(pulumi.StringPtrOutput)
}

// Git authentication configuration for this deployment. Should not be specified if there are `gitHub` settings for this deployment.
func (o DeploymentSettingsGitSourceOutput) GitAuth() DeploymentSettingsGitSourceGitAuthPtrOutput {
	return o.ApplyT(func(v DeploymentSettingsGitSource) *DeploymentSettingsGitSourceGitAuth { return v.GitAuth }).(DeploymentSettingsGitSourceGitAuthPtrOutput)
}

// The directory within the repository where the Pulumi.yaml is located.
func (o DeploymentSettingsGitSourceOutput) RepoDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentSettingsGitSource) *string { return v.RepoDir }).(pulumi.StringPtrOutput)
}

// The repository URL to use for git settings. Should not be specified if there are `gitHub` settings for this deployment.
func (o DeploymentSettingsGitSourceOutput) RepoUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentSettingsGitSource) *string { return v.RepoUrl }).(pulumi.StringPtrOutput)
}

type DeploymentSettingsGitSourcePtrOutput struct{ *pulumi.OutputState }

func (DeploymentSettingsGitSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentSettingsGitSource)(nil)).Elem()
}

func (o DeploymentSettingsGitSourcePtrOutput) ToDeploymentSettingsGitSourcePtrOutput() DeploymentSettingsGitSourcePtrOutput {
	return o
}

func (o DeploymentSettingsGitSourcePtrOutput) ToDeploymentSettingsGitSourcePtrOutputWithContext(ctx context.Context) DeploymentSettingsGitSourcePtrOutput {
	return o
}

func (o DeploymentSettingsGitSourcePtrOutput) Elem() DeploymentSettingsGitSourceOutput {
	return o.ApplyT(func(v *DeploymentSettingsGitSource) DeploymentSettingsGitSource {
		if v != nil {
			return *v
		}
		var ret DeploymentSettingsGitSource
		return ret
	}).(DeploymentSettingsGitSourceOutput)
}

// The branch to deploy. One of either `branch` or `commit` must be specified.
func (o DeploymentSettingsGitSourcePtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentSettingsGitSource) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

// The commit to deploy. One of either `branch` or `commit` must be specified.
func (o DeploymentSettingsGitSourcePtrOutput) Commit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentSettingsGitSource) *string {
		if v == nil {
			return nil
		}
		return v.Commit
	}).(pulumi.StringPtrOutput)
}

// Git authentication configuration for this deployment. Should not be specified if there are `gitHub` settings for this deployment.
func (o DeploymentSettingsGitSourcePtrOutput) GitAuth() DeploymentSettingsGitSourceGitAuthPtrOutput {
	return o.ApplyT(func(v *DeploymentSettingsGitSource) *DeploymentSettingsGitSourceGitAuth {
		if v == nil {
			return nil
		}
		return v.GitAuth
	}).(DeploymentSettingsGitSourceGitAuthPtrOutput)
}

// The directory within the repository where the Pulumi.yaml is located.
func (o DeploymentSettingsGitSourcePtrOutput) RepoDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentSettingsGitSource) *string {
		if v == nil {
			return nil
		}
		return v.RepoDir
	}).(pulumi.StringPtrOutput)
}

// The repository URL to use for git settings. Should not be specified if there are `gitHub` settings for this deployment.
func (o DeploymentSettingsGitSourcePtrOutput) RepoUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentSettingsGitSource) *string {
		if v == nil {
			return nil
		}
		return v.RepoUrl
	}).(pulumi.StringPtrOutput)
}

// Git source settings for a deployment.
type DeploymentSettingsGitSourceGitAuth struct {
	// Basic auth for git authentication. Only one of `personalAccessToken`, `sshAuth`, or `basicAuth` must be defined.
	BasicAuth *DeploymentSettingsGitAuthBasicAuth `pulumi:"basicAuth"`
	// Personal access token for git authentication. Only one of `personalAccessToken`, `sshAuth`, or `basicAuth` must be defined.
	PersonalAccessToken *string `pulumi:"personalAccessToken"`
	// SSH auth for git authentication. Only one of `personalAccessToken`, `sshAuth`, or `basicAuth` must be defined.
	SshAuth *DeploymentSettingsGitAuthSSHAuth `pulumi:"sshAuth"`
}

// DeploymentSettingsGitSourceGitAuthInput is an input type that accepts DeploymentSettingsGitSourceGitAuthArgs and DeploymentSettingsGitSourceGitAuthOutput values.
// You can construct a concrete instance of `DeploymentSettingsGitSourceGitAuthInput` via:
//
//	DeploymentSettingsGitSourceGitAuthArgs{...}
type DeploymentSettingsGitSourceGitAuthInput interface {
	pulumi.Input

	ToDeploymentSettingsGitSourceGitAuthOutput() DeploymentSettingsGitSourceGitAuthOutput
	ToDeploymentSettingsGitSourceGitAuthOutputWithContext(context.Context) DeploymentSettingsGitSourceGitAuthOutput
}

// Git source settings for a deployment.
type DeploymentSettingsGitSourceGitAuthArgs struct {
	// Basic auth for git authentication. Only one of `personalAccessToken`, `sshAuth`, or `basicAuth` must be defined.
	BasicAuth DeploymentSettingsGitAuthBasicAuthPtrInput `pulumi:"basicAuth"`
	// Personal access token for git authentication. Only one of `personalAccessToken`, `sshAuth`, or `basicAuth` must be defined.
	PersonalAccessToken pulumi.StringPtrInput `pulumi:"personalAccessToken"`
	// SSH auth for git authentication. Only one of `personalAccessToken`, `sshAuth`, or `basicAuth` must be defined.
	SshAuth DeploymentSettingsGitAuthSSHAuthPtrInput `pulumi:"sshAuth"`
}

func (DeploymentSettingsGitSourceGitAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentSettingsGitSourceGitAuth)(nil)).Elem()
}

func (i DeploymentSettingsGitSourceGitAuthArgs) ToDeploymentSettingsGitSourceGitAuthOutput() DeploymentSettingsGitSourceGitAuthOutput {
	return i.ToDeploymentSettingsGitSourceGitAuthOutputWithContext(context.Background())
}

func (i DeploymentSettingsGitSourceGitAuthArgs) ToDeploymentSettingsGitSourceGitAuthOutputWithContext(ctx context.Context) DeploymentSettingsGitSourceGitAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSettingsGitSourceGitAuthOutput)
}

func (i DeploymentSettingsGitSourceGitAuthArgs) ToDeploymentSettingsGitSourceGitAuthPtrOutput() DeploymentSettingsGitSourceGitAuthPtrOutput {
	return i.ToDeploymentSettingsGitSourceGitAuthPtrOutputWithContext(context.Background())
}

func (i DeploymentSettingsGitSourceGitAuthArgs) ToDeploymentSettingsGitSourceGitAuthPtrOutputWithContext(ctx context.Context) DeploymentSettingsGitSourceGitAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSettingsGitSourceGitAuthOutput).ToDeploymentSettingsGitSourceGitAuthPtrOutputWithContext(ctx)
}

// DeploymentSettingsGitSourceGitAuthPtrInput is an input type that accepts DeploymentSettingsGitSourceGitAuthArgs, DeploymentSettingsGitSourceGitAuthPtr and DeploymentSettingsGitSourceGitAuthPtrOutput values.
// You can construct a concrete instance of `DeploymentSettingsGitSourceGitAuthPtrInput` via:
//
//	        DeploymentSettingsGitSourceGitAuthArgs{...}
//
//	or:
//
//	        nil
type DeploymentSettingsGitSourceGitAuthPtrInput interface {
	pulumi.Input

	ToDeploymentSettingsGitSourceGitAuthPtrOutput() DeploymentSettingsGitSourceGitAuthPtrOutput
	ToDeploymentSettingsGitSourceGitAuthPtrOutputWithContext(context.Context) DeploymentSettingsGitSourceGitAuthPtrOutput
}

type deploymentSettingsGitSourceGitAuthPtrType DeploymentSettingsGitSourceGitAuthArgs

func DeploymentSettingsGitSourceGitAuthPtr(v *DeploymentSettingsGitSourceGitAuthArgs) DeploymentSettingsGitSourceGitAuthPtrInput {
	return (*deploymentSettingsGitSourceGitAuthPtrType)(v)
}

func (*deploymentSettingsGitSourceGitAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentSettingsGitSourceGitAuth)(nil)).Elem()
}

func (i *deploymentSettingsGitSourceGitAuthPtrType) ToDeploymentSettingsGitSourceGitAuthPtrOutput() DeploymentSettingsGitSourceGitAuthPtrOutput {
	return i.ToDeploymentSettingsGitSourceGitAuthPtrOutputWithContext(context.Background())
}

func (i *deploymentSettingsGitSourceGitAuthPtrType) ToDeploymentSettingsGitSourceGitAuthPtrOutputWithContext(ctx context.Context) DeploymentSettingsGitSourceGitAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSettingsGitSourceGitAuthPtrOutput)
}

// Git source settings for a deployment.
type DeploymentSettingsGitSourceGitAuthOutput struct{ *pulumi.OutputState }

func (DeploymentSettingsGitSourceGitAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentSettingsGitSourceGitAuth)(nil)).Elem()
}

func (o DeploymentSettingsGitSourceGitAuthOutput) ToDeploymentSettingsGitSourceGitAuthOutput() DeploymentSettingsGitSourceGitAuthOutput {
	return o
}

func (o DeploymentSettingsGitSourceGitAuthOutput) ToDeploymentSettingsGitSourceGitAuthOutputWithContext(ctx context.Context) DeploymentSettingsGitSourceGitAuthOutput {
	return o
}

func (o DeploymentSettingsGitSourceGitAuthOutput) ToDeploymentSettingsGitSourceGitAuthPtrOutput() DeploymentSettingsGitSourceGitAuthPtrOutput {
	return o.ToDeploymentSettingsGitSourceGitAuthPtrOutputWithContext(context.Background())
}

func (o DeploymentSettingsGitSourceGitAuthOutput) ToDeploymentSettingsGitSourceGitAuthPtrOutputWithContext(ctx context.Context) DeploymentSettingsGitSourceGitAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentSettingsGitSourceGitAuth) *DeploymentSettingsGitSourceGitAuth {
		return &v
	}).(DeploymentSettingsGitSourceGitAuthPtrOutput)
}

// Basic auth for git authentication. Only one of `personalAccessToken`, `sshAuth`, or `basicAuth` must be defined.
func (o DeploymentSettingsGitSourceGitAuthOutput) BasicAuth() DeploymentSettingsGitAuthBasicAuthPtrOutput {
	return o.ApplyT(func(v DeploymentSettingsGitSourceGitAuth) *DeploymentSettingsGitAuthBasicAuth { return v.BasicAuth }).(DeploymentSettingsGitAuthBasicAuthPtrOutput)
}

// Personal access token for git authentication. Only one of `personalAccessToken`, `sshAuth`, or `basicAuth` must be defined.
func (o DeploymentSettingsGitSourceGitAuthOutput) PersonalAccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentSettingsGitSourceGitAuth) *string { return v.PersonalAccessToken }).(pulumi.StringPtrOutput)
}

// SSH auth for git authentication. Only one of `personalAccessToken`, `sshAuth`, or `basicAuth` must be defined.
func (o DeploymentSettingsGitSourceGitAuthOutput) SshAuth() DeploymentSettingsGitAuthSSHAuthPtrOutput {
	return o.ApplyT(func(v DeploymentSettingsGitSourceGitAuth) *DeploymentSettingsGitAuthSSHAuth { return v.SshAuth }).(DeploymentSettingsGitAuthSSHAuthPtrOutput)
}

type DeploymentSettingsGitSourceGitAuthPtrOutput struct{ *pulumi.OutputState }

func (DeploymentSettingsGitSourceGitAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentSettingsGitSourceGitAuth)(nil)).Elem()
}

func (o DeploymentSettingsGitSourceGitAuthPtrOutput) ToDeploymentSettingsGitSourceGitAuthPtrOutput() DeploymentSettingsGitSourceGitAuthPtrOutput {
	return o
}

func (o DeploymentSettingsGitSourceGitAuthPtrOutput) ToDeploymentSettingsGitSourceGitAuthPtrOutputWithContext(ctx context.Context) DeploymentSettingsGitSourceGitAuthPtrOutput {
	return o
}

func (o DeploymentSettingsGitSourceGitAuthPtrOutput) Elem() DeploymentSettingsGitSourceGitAuthOutput {
	return o.ApplyT(func(v *DeploymentSettingsGitSourceGitAuth) DeploymentSettingsGitSourceGitAuth {
		if v != nil {
			return *v
		}
		var ret DeploymentSettingsGitSourceGitAuth
		return ret
	}).(DeploymentSettingsGitSourceGitAuthOutput)
}

// Basic auth for git authentication. Only one of `personalAccessToken`, `sshAuth`, or `basicAuth` must be defined.
func (o DeploymentSettingsGitSourceGitAuthPtrOutput) BasicAuth() DeploymentSettingsGitAuthBasicAuthPtrOutput {
	return o.ApplyT(func(v *DeploymentSettingsGitSourceGitAuth) *DeploymentSettingsGitAuthBasicAuth {
		if v == nil {
			return nil
		}
		return v.BasicAuth
	}).(DeploymentSettingsGitAuthBasicAuthPtrOutput)
}

// Personal access token for git authentication. Only one of `personalAccessToken`, `sshAuth`, or `basicAuth` must be defined.
func (o DeploymentSettingsGitSourceGitAuthPtrOutput) PersonalAccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentSettingsGitSourceGitAuth) *string {
		if v == nil {
			return nil
		}
		return v.PersonalAccessToken
	}).(pulumi.StringPtrOutput)
}

// SSH auth for git authentication. Only one of `personalAccessToken`, `sshAuth`, or `basicAuth` must be defined.
func (o DeploymentSettingsGitSourceGitAuthPtrOutput) SshAuth() DeploymentSettingsGitAuthSSHAuthPtrOutput {
	return o.ApplyT(func(v *DeploymentSettingsGitSourceGitAuth) *DeploymentSettingsGitAuthSSHAuth {
		if v == nil {
			return nil
		}
		return v.SshAuth
	}).(DeploymentSettingsGitAuthSSHAuthPtrOutput)
}

// GitHub settings for the deployment.
type DeploymentSettingsGithub struct {
}

// DeploymentSettingsGithubInput is an input type that accepts DeploymentSettingsGithubArgs and DeploymentSettingsGithubOutput values.
// You can construct a concrete instance of `DeploymentSettingsGithubInput` via:
//
//	DeploymentSettingsGithubArgs{...}
type DeploymentSettingsGithubInput interface {
	pulumi.Input

	ToDeploymentSettingsGithubOutput() DeploymentSettingsGithubOutput
	ToDeploymentSettingsGithubOutputWithContext(context.Context) DeploymentSettingsGithubOutput
}

// GitHub settings for the deployment.
type DeploymentSettingsGithubArgs struct {
}

func (DeploymentSettingsGithubArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentSettingsGithub)(nil)).Elem()
}

func (i DeploymentSettingsGithubArgs) ToDeploymentSettingsGithubOutput() DeploymentSettingsGithubOutput {
	return i.ToDeploymentSettingsGithubOutputWithContext(context.Background())
}

func (i DeploymentSettingsGithubArgs) ToDeploymentSettingsGithubOutputWithContext(ctx context.Context) DeploymentSettingsGithubOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSettingsGithubOutput)
}

func (i DeploymentSettingsGithubArgs) ToDeploymentSettingsGithubPtrOutput() DeploymentSettingsGithubPtrOutput {
	return i.ToDeploymentSettingsGithubPtrOutputWithContext(context.Background())
}

func (i DeploymentSettingsGithubArgs) ToDeploymentSettingsGithubPtrOutputWithContext(ctx context.Context) DeploymentSettingsGithubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSettingsGithubOutput).ToDeploymentSettingsGithubPtrOutputWithContext(ctx)
}

// DeploymentSettingsGithubPtrInput is an input type that accepts DeploymentSettingsGithubArgs, DeploymentSettingsGithubPtr and DeploymentSettingsGithubPtrOutput values.
// You can construct a concrete instance of `DeploymentSettingsGithubPtrInput` via:
//
//	        DeploymentSettingsGithubArgs{...}
//
//	or:
//
//	        nil
type DeploymentSettingsGithubPtrInput interface {
	pulumi.Input

	ToDeploymentSettingsGithubPtrOutput() DeploymentSettingsGithubPtrOutput
	ToDeploymentSettingsGithubPtrOutputWithContext(context.Context) DeploymentSettingsGithubPtrOutput
}

type deploymentSettingsGithubPtrType DeploymentSettingsGithubArgs

func DeploymentSettingsGithubPtr(v *DeploymentSettingsGithubArgs) DeploymentSettingsGithubPtrInput {
	return (*deploymentSettingsGithubPtrType)(v)
}

func (*deploymentSettingsGithubPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentSettingsGithub)(nil)).Elem()
}

func (i *deploymentSettingsGithubPtrType) ToDeploymentSettingsGithubPtrOutput() DeploymentSettingsGithubPtrOutput {
	return i.ToDeploymentSettingsGithubPtrOutputWithContext(context.Background())
}

func (i *deploymentSettingsGithubPtrType) ToDeploymentSettingsGithubPtrOutputWithContext(ctx context.Context) DeploymentSettingsGithubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSettingsGithubPtrOutput)
}

// GitHub settings for the deployment.
type DeploymentSettingsGithubOutput struct{ *pulumi.OutputState }

func (DeploymentSettingsGithubOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentSettingsGithub)(nil)).Elem()
}

func (o DeploymentSettingsGithubOutput) ToDeploymentSettingsGithubOutput() DeploymentSettingsGithubOutput {
	return o
}

func (o DeploymentSettingsGithubOutput) ToDeploymentSettingsGithubOutputWithContext(ctx context.Context) DeploymentSettingsGithubOutput {
	return o
}

func (o DeploymentSettingsGithubOutput) ToDeploymentSettingsGithubPtrOutput() DeploymentSettingsGithubPtrOutput {
	return o.ToDeploymentSettingsGithubPtrOutputWithContext(context.Background())
}

func (o DeploymentSettingsGithubOutput) ToDeploymentSettingsGithubPtrOutputWithContext(ctx context.Context) DeploymentSettingsGithubPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentSettingsGithub) *DeploymentSettingsGithub {
		return &v
	}).(DeploymentSettingsGithubPtrOutput)
}

type DeploymentSettingsGithubPtrOutput struct{ *pulumi.OutputState }

func (DeploymentSettingsGithubPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentSettingsGithub)(nil)).Elem()
}

func (o DeploymentSettingsGithubPtrOutput) ToDeploymentSettingsGithubPtrOutput() DeploymentSettingsGithubPtrOutput {
	return o
}

func (o DeploymentSettingsGithubPtrOutput) ToDeploymentSettingsGithubPtrOutputWithContext(ctx context.Context) DeploymentSettingsGithubPtrOutput {
	return o
}

func (o DeploymentSettingsGithubPtrOutput) Elem() DeploymentSettingsGithubOutput {
	return o.ApplyT(func(v *DeploymentSettingsGithub) DeploymentSettingsGithub {
		if v != nil {
			return *v
		}
		var ret DeploymentSettingsGithub
		return ret
	}).(DeploymentSettingsGithubOutput)
}

// Settings related to the Pulumi operation environment during the deployment.
type DeploymentSettingsOperationContext struct {
}

// DeploymentSettingsOperationContextInput is an input type that accepts DeploymentSettingsOperationContextArgs and DeploymentSettingsOperationContextOutput values.
// You can construct a concrete instance of `DeploymentSettingsOperationContextInput` via:
//
//	DeploymentSettingsOperationContextArgs{...}
type DeploymentSettingsOperationContextInput interface {
	pulumi.Input

	ToDeploymentSettingsOperationContextOutput() DeploymentSettingsOperationContextOutput
	ToDeploymentSettingsOperationContextOutputWithContext(context.Context) DeploymentSettingsOperationContextOutput
}

// Settings related to the Pulumi operation environment during the deployment.
type DeploymentSettingsOperationContextArgs struct {
}

func (DeploymentSettingsOperationContextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentSettingsOperationContext)(nil)).Elem()
}

func (i DeploymentSettingsOperationContextArgs) ToDeploymentSettingsOperationContextOutput() DeploymentSettingsOperationContextOutput {
	return i.ToDeploymentSettingsOperationContextOutputWithContext(context.Background())
}

func (i DeploymentSettingsOperationContextArgs) ToDeploymentSettingsOperationContextOutputWithContext(ctx context.Context) DeploymentSettingsOperationContextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSettingsOperationContextOutput)
}

func (i DeploymentSettingsOperationContextArgs) ToDeploymentSettingsOperationContextPtrOutput() DeploymentSettingsOperationContextPtrOutput {
	return i.ToDeploymentSettingsOperationContextPtrOutputWithContext(context.Background())
}

func (i DeploymentSettingsOperationContextArgs) ToDeploymentSettingsOperationContextPtrOutputWithContext(ctx context.Context) DeploymentSettingsOperationContextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSettingsOperationContextOutput).ToDeploymentSettingsOperationContextPtrOutputWithContext(ctx)
}

// DeploymentSettingsOperationContextPtrInput is an input type that accepts DeploymentSettingsOperationContextArgs, DeploymentSettingsOperationContextPtr and DeploymentSettingsOperationContextPtrOutput values.
// You can construct a concrete instance of `DeploymentSettingsOperationContextPtrInput` via:
//
//	        DeploymentSettingsOperationContextArgs{...}
//
//	or:
//
//	        nil
type DeploymentSettingsOperationContextPtrInput interface {
	pulumi.Input

	ToDeploymentSettingsOperationContextPtrOutput() DeploymentSettingsOperationContextPtrOutput
	ToDeploymentSettingsOperationContextPtrOutputWithContext(context.Context) DeploymentSettingsOperationContextPtrOutput
}

type deploymentSettingsOperationContextPtrType DeploymentSettingsOperationContextArgs

func DeploymentSettingsOperationContextPtr(v *DeploymentSettingsOperationContextArgs) DeploymentSettingsOperationContextPtrInput {
	return (*deploymentSettingsOperationContextPtrType)(v)
}

func (*deploymentSettingsOperationContextPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentSettingsOperationContext)(nil)).Elem()
}

func (i *deploymentSettingsOperationContextPtrType) ToDeploymentSettingsOperationContextPtrOutput() DeploymentSettingsOperationContextPtrOutput {
	return i.ToDeploymentSettingsOperationContextPtrOutputWithContext(context.Background())
}

func (i *deploymentSettingsOperationContextPtrType) ToDeploymentSettingsOperationContextPtrOutputWithContext(ctx context.Context) DeploymentSettingsOperationContextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSettingsOperationContextPtrOutput)
}

// Settings related to the Pulumi operation environment during the deployment.
type DeploymentSettingsOperationContextOutput struct{ *pulumi.OutputState }

func (DeploymentSettingsOperationContextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentSettingsOperationContext)(nil)).Elem()
}

func (o DeploymentSettingsOperationContextOutput) ToDeploymentSettingsOperationContextOutput() DeploymentSettingsOperationContextOutput {
	return o
}

func (o DeploymentSettingsOperationContextOutput) ToDeploymentSettingsOperationContextOutputWithContext(ctx context.Context) DeploymentSettingsOperationContextOutput {
	return o
}

func (o DeploymentSettingsOperationContextOutput) ToDeploymentSettingsOperationContextPtrOutput() DeploymentSettingsOperationContextPtrOutput {
	return o.ToDeploymentSettingsOperationContextPtrOutputWithContext(context.Background())
}

func (o DeploymentSettingsOperationContextOutput) ToDeploymentSettingsOperationContextPtrOutputWithContext(ctx context.Context) DeploymentSettingsOperationContextPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentSettingsOperationContext) *DeploymentSettingsOperationContext {
		return &v
	}).(DeploymentSettingsOperationContextPtrOutput)
}

type DeploymentSettingsOperationContextPtrOutput struct{ *pulumi.OutputState }

func (DeploymentSettingsOperationContextPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentSettingsOperationContext)(nil)).Elem()
}

func (o DeploymentSettingsOperationContextPtrOutput) ToDeploymentSettingsOperationContextPtrOutput() DeploymentSettingsOperationContextPtrOutput {
	return o
}

func (o DeploymentSettingsOperationContextPtrOutput) ToDeploymentSettingsOperationContextPtrOutputWithContext(ctx context.Context) DeploymentSettingsOperationContextPtrOutput {
	return o
}

func (o DeploymentSettingsOperationContextPtrOutput) Elem() DeploymentSettingsOperationContextOutput {
	return o.ApplyT(func(v *DeploymentSettingsOperationContext) DeploymentSettingsOperationContext {
		if v != nil {
			return *v
		}
		var ret DeploymentSettingsOperationContext
		return ret
	}).(DeploymentSettingsOperationContextOutput)
}

// Settings related to the source of the deployment.
type DeploymentSettingsSourceContext struct {
	// Git source settings for a deployment.
	Git *DeploymentSettingsGitSource `pulumi:"git"`
}

// DeploymentSettingsSourceContextInput is an input type that accepts DeploymentSettingsSourceContextArgs and DeploymentSettingsSourceContextOutput values.
// You can construct a concrete instance of `DeploymentSettingsSourceContextInput` via:
//
//	DeploymentSettingsSourceContextArgs{...}
type DeploymentSettingsSourceContextInput interface {
	pulumi.Input

	ToDeploymentSettingsSourceContextOutput() DeploymentSettingsSourceContextOutput
	ToDeploymentSettingsSourceContextOutputWithContext(context.Context) DeploymentSettingsSourceContextOutput
}

// Settings related to the source of the deployment.
type DeploymentSettingsSourceContextArgs struct {
	// Git source settings for a deployment.
	Git DeploymentSettingsGitSourcePtrInput `pulumi:"git"`
}

func (DeploymentSettingsSourceContextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentSettingsSourceContext)(nil)).Elem()
}

func (i DeploymentSettingsSourceContextArgs) ToDeploymentSettingsSourceContextOutput() DeploymentSettingsSourceContextOutput {
	return i.ToDeploymentSettingsSourceContextOutputWithContext(context.Background())
}

func (i DeploymentSettingsSourceContextArgs) ToDeploymentSettingsSourceContextOutputWithContext(ctx context.Context) DeploymentSettingsSourceContextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSettingsSourceContextOutput)
}

func (i DeploymentSettingsSourceContextArgs) ToDeploymentSettingsSourceContextPtrOutput() DeploymentSettingsSourceContextPtrOutput {
	return i.ToDeploymentSettingsSourceContextPtrOutputWithContext(context.Background())
}

func (i DeploymentSettingsSourceContextArgs) ToDeploymentSettingsSourceContextPtrOutputWithContext(ctx context.Context) DeploymentSettingsSourceContextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSettingsSourceContextOutput).ToDeploymentSettingsSourceContextPtrOutputWithContext(ctx)
}

// DeploymentSettingsSourceContextPtrInput is an input type that accepts DeploymentSettingsSourceContextArgs, DeploymentSettingsSourceContextPtr and DeploymentSettingsSourceContextPtrOutput values.
// You can construct a concrete instance of `DeploymentSettingsSourceContextPtrInput` via:
//
//	        DeploymentSettingsSourceContextArgs{...}
//
//	or:
//
//	        nil
type DeploymentSettingsSourceContextPtrInput interface {
	pulumi.Input

	ToDeploymentSettingsSourceContextPtrOutput() DeploymentSettingsSourceContextPtrOutput
	ToDeploymentSettingsSourceContextPtrOutputWithContext(context.Context) DeploymentSettingsSourceContextPtrOutput
}

type deploymentSettingsSourceContextPtrType DeploymentSettingsSourceContextArgs

func DeploymentSettingsSourceContextPtr(v *DeploymentSettingsSourceContextArgs) DeploymentSettingsSourceContextPtrInput {
	return (*deploymentSettingsSourceContextPtrType)(v)
}

func (*deploymentSettingsSourceContextPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentSettingsSourceContext)(nil)).Elem()
}

func (i *deploymentSettingsSourceContextPtrType) ToDeploymentSettingsSourceContextPtrOutput() DeploymentSettingsSourceContextPtrOutput {
	return i.ToDeploymentSettingsSourceContextPtrOutputWithContext(context.Background())
}

func (i *deploymentSettingsSourceContextPtrType) ToDeploymentSettingsSourceContextPtrOutputWithContext(ctx context.Context) DeploymentSettingsSourceContextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSettingsSourceContextPtrOutput)
}

// Settings related to the source of the deployment.
type DeploymentSettingsSourceContextOutput struct{ *pulumi.OutputState }

func (DeploymentSettingsSourceContextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentSettingsSourceContext)(nil)).Elem()
}

func (o DeploymentSettingsSourceContextOutput) ToDeploymentSettingsSourceContextOutput() DeploymentSettingsSourceContextOutput {
	return o
}

func (o DeploymentSettingsSourceContextOutput) ToDeploymentSettingsSourceContextOutputWithContext(ctx context.Context) DeploymentSettingsSourceContextOutput {
	return o
}

func (o DeploymentSettingsSourceContextOutput) ToDeploymentSettingsSourceContextPtrOutput() DeploymentSettingsSourceContextPtrOutput {
	return o.ToDeploymentSettingsSourceContextPtrOutputWithContext(context.Background())
}

func (o DeploymentSettingsSourceContextOutput) ToDeploymentSettingsSourceContextPtrOutputWithContext(ctx context.Context) DeploymentSettingsSourceContextPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentSettingsSourceContext) *DeploymentSettingsSourceContext {
		return &v
	}).(DeploymentSettingsSourceContextPtrOutput)
}

// Git source settings for a deployment.
func (o DeploymentSettingsSourceContextOutput) Git() DeploymentSettingsGitSourcePtrOutput {
	return o.ApplyT(func(v DeploymentSettingsSourceContext) *DeploymentSettingsGitSource { return v.Git }).(DeploymentSettingsGitSourcePtrOutput)
}

type DeploymentSettingsSourceContextPtrOutput struct{ *pulumi.OutputState }

func (DeploymentSettingsSourceContextPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentSettingsSourceContext)(nil)).Elem()
}

func (o DeploymentSettingsSourceContextPtrOutput) ToDeploymentSettingsSourceContextPtrOutput() DeploymentSettingsSourceContextPtrOutput {
	return o
}

func (o DeploymentSettingsSourceContextPtrOutput) ToDeploymentSettingsSourceContextPtrOutputWithContext(ctx context.Context) DeploymentSettingsSourceContextPtrOutput {
	return o
}

func (o DeploymentSettingsSourceContextPtrOutput) Elem() DeploymentSettingsSourceContextOutput {
	return o.ApplyT(func(v *DeploymentSettingsSourceContext) DeploymentSettingsSourceContext {
		if v != nil {
			return *v
		}
		var ret DeploymentSettingsSourceContext
		return ret
	}).(DeploymentSettingsSourceContextOutput)
}

// Git source settings for a deployment.
func (o DeploymentSettingsSourceContextPtrOutput) Git() DeploymentSettingsGitSourcePtrOutput {
	return o.ApplyT(func(v *DeploymentSettingsSourceContext) *DeploymentSettingsGitSource {
		if v == nil {
			return nil
		}
		return v.Git
	}).(DeploymentSettingsGitSourcePtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentSettingsExecutorContextInput)(nil)).Elem(), DeploymentSettingsExecutorContextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentSettingsExecutorContextPtrInput)(nil)).Elem(), DeploymentSettingsExecutorContextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentSettingsGitAuthBasicAuthInput)(nil)).Elem(), DeploymentSettingsGitAuthBasicAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentSettingsGitAuthBasicAuthPtrInput)(nil)).Elem(), DeploymentSettingsGitAuthBasicAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentSettingsGitAuthSSHAuthInput)(nil)).Elem(), DeploymentSettingsGitAuthSSHAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentSettingsGitAuthSSHAuthPtrInput)(nil)).Elem(), DeploymentSettingsGitAuthSSHAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentSettingsGitSourceInput)(nil)).Elem(), DeploymentSettingsGitSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentSettingsGitSourcePtrInput)(nil)).Elem(), DeploymentSettingsGitSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentSettingsGitSourceGitAuthInput)(nil)).Elem(), DeploymentSettingsGitSourceGitAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentSettingsGitSourceGitAuthPtrInput)(nil)).Elem(), DeploymentSettingsGitSourceGitAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentSettingsGithubInput)(nil)).Elem(), DeploymentSettingsGithubArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentSettingsGithubPtrInput)(nil)).Elem(), DeploymentSettingsGithubArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentSettingsOperationContextInput)(nil)).Elem(), DeploymentSettingsOperationContextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentSettingsOperationContextPtrInput)(nil)).Elem(), DeploymentSettingsOperationContextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentSettingsSourceContextInput)(nil)).Elem(), DeploymentSettingsSourceContextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentSettingsSourceContextPtrInput)(nil)).Elem(), DeploymentSettingsSourceContextArgs{})
	pulumi.RegisterOutputType(DeploymentSettingsExecutorContextOutput{})
	pulumi.RegisterOutputType(DeploymentSettingsExecutorContextPtrOutput{})
	pulumi.RegisterOutputType(DeploymentSettingsGitAuthBasicAuthOutput{})
	pulumi.RegisterOutputType(DeploymentSettingsGitAuthBasicAuthPtrOutput{})
	pulumi.RegisterOutputType(DeploymentSettingsGitAuthSSHAuthOutput{})
	pulumi.RegisterOutputType(DeploymentSettingsGitAuthSSHAuthPtrOutput{})
	pulumi.RegisterOutputType(DeploymentSettingsGitSourceOutput{})
	pulumi.RegisterOutputType(DeploymentSettingsGitSourcePtrOutput{})
	pulumi.RegisterOutputType(DeploymentSettingsGitSourceGitAuthOutput{})
	pulumi.RegisterOutputType(DeploymentSettingsGitSourceGitAuthPtrOutput{})
	pulumi.RegisterOutputType(DeploymentSettingsGithubOutput{})
	pulumi.RegisterOutputType(DeploymentSettingsGithubPtrOutput{})
	pulumi.RegisterOutputType(DeploymentSettingsOperationContextOutput{})
	pulumi.RegisterOutputType(DeploymentSettingsOperationContextPtrOutput{})
	pulumi.RegisterOutputType(DeploymentSettingsSourceContextOutput{})
	pulumi.RegisterOutputType(DeploymentSettingsSourceContextPtrOutput{})
}
